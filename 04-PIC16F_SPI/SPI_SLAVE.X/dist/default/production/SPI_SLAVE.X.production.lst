

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu May 23 14:37:32 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0088                     	;# 
    88     0089                     	;# 
    89     008C                     	;# 
    90     008D                     	;# 
    91     008E                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009C                     	;# 
    99     009D                     	;# 
   100     009E                     	;# 
   101     009F                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     010E                     	;# 
   105     010F                     	;# 
   106     018C                     	;# 
   107     018D                     	;# 
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     0008                     	;# 
   117     0009                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0013                     	;# 
   129     0014                     	;# 
   130     0015                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0017                     	;# 
   134     0018                     	;# 
   135     0019                     	;# 
   136     001A                     	;# 
   137     001B                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001D                     	;# 
   141     001E                     	;# 
   142     001F                     	;# 
   143     0081                     	;# 
   144     0085                     	;# 
   145     0086                     	;# 
   146     0087                     	;# 
   147     0088                     	;# 
   148     0089                     	;# 
   149     008C                     	;# 
   150     008D                     	;# 
   151     008E                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0094                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009C                     	;# 
   159     009D                     	;# 
   160     009E                     	;# 
   161     009F                     	;# 
   162     010C                     	;# 
   163     010D                     	;# 
   164     010E                     	;# 
   165     010F                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168     0006                     _PORTB	set	6
   169     0013                     _SSPBUF	set	19
   170     00A6                     _SSPOV	set	166
   171     005F                     _GIE	set	95
   172     005E                     _PEIE	set	94
   173     00A4                     _CKP	set	164
   174     00A5                     _SSPEN	set	165
   175     00A3                     _SSPM3	set	163
   176     00A2                     _SSPM2	set	162
   177     00A1                     _SSPM1	set	161
   178     00A0                     _SSPM0	set	160
   179     0063                     _SSPIF	set	99
   180     0086                     _TRISB	set	134
   181     04A0                     _BF	set	1184
   182     0463                     _SSPIE	set	1123
   183     042D                     _TRISA5	set	1069
   184     04F8                     _PCFG0	set	1272
   185     04F9                     _PCFG1	set	1273
   186     04FA                     _PCFG2	set	1274
   187     04FB                     _PCFG3	set	1275
   188     043B                     _TRISC3	set	1083
   189     043C                     _TRISC4	set	1084
   190     043D                     _TRISC5	set	1085
   191     04A7                     _SMP	set	1191
   192     04A6                     _CKE	set	1190
   193                           
   194                           	psect	cinit
   195     000F                     start_initialization:	
   196                           ; #config settings
   197                           
   198     000F                     __initialization:
   199                           
   200                           ; Clear objects allocated to COMMON
   201     000F  01F2               	clrf	__pbssCOMMON& (0+127)
   202     0010                     end_of_initialization:	
   203                           ;End of C runtime variable initialization code
   204                           
   205     0010                     __end_of__initialization:
   206     0010  0183               	clrf	3
   207     0011  120A  118A  283C   	ljmp	_main	;jump to C main() function
   208                           
   209                           	psect	bssCOMMON
   210     0072                     __pbssCOMMON:
   211     0072                     _Data:
   212     0072                     	ds	1
   213                           
   214                           	psect	cstackCOMMON
   215     0070                     __pcstackCOMMON:
   216     0070                     ?_SPI_Slave_Init:
   217     0070                     ?_ISR:	
   218                           ; 1 bytes @ 0x0
   219                           
   220     0070                     ??_ISR:	
   221                           ; 1 bytes @ 0x0
   222                           
   223     0070                     ?_main:	
   224                           ; 1 bytes @ 0x0
   225                           
   226                           
   227                           ; 1 bytes @ 0x0
   228     0070                     	ds	2
   229     0072                     ??_SPI_Slave_Init:
   230     0072                     ??_main:	
   231                           ; 1 bytes @ 0x2
   232                           
   233                           
   234                           	psect	maintext
   235     003C                     __pmaintext:	
   236                           ; 1 bytes @ 0x2
   237 ;;
   238 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   239 ;;
   240 ;; *************** function _main *****************
   241 ;; Defined at:
   242 ;;		line 45 in file "newmain.c"
   243 ;; Parameters:    Size  Location     Type
   244 ;;		None
   245 ;; Auto vars:     Size  Location     Type
   246 ;;		None
   247 ;; Return value:  Size  Location     Type
   248 ;;                  1    wreg      void 
   249 ;; Registers used:
   250 ;;		wreg, status,2, status,0, pclath, cstack
   251 ;; Tracked objects:
   252 ;;		On entry : B00/0
   253 ;;		On exit  : 0/0
   254 ;;		Unchanged: 0/0
   255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   256 ;;      Params:         0       0       0       0       0
   257 ;;      Locals:         0       0       0       0       0
   258 ;;      Temps:          0       0       0       0       0
   259 ;;      Totals:         0       0       0       0       0
   260 ;;Total ram usage:        0 bytes
   261 ;; Hardware stack levels required when called: 2
   262 ;; This function calls:
   263 ;;		_SPI_Slave_Init
   264 ;; This function is called by:
   265 ;;		Startup code after reset
   266 ;; This function uses a non-reentrant model
   267 ;;
   268                           
   269     003C                     _main:	
   270                           ;psect for function _main
   271                           
   272     003C                     l627:	
   273                           ;incstack = 0
   274                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   275                           
   276                           
   277                           ;newmain.c: 47:     SPI_Slave_Init();
   278     003C  120A  118A  2014  120A  118A  	fcall	_SPI_Slave_Init
   279     0041                     l629:
   280                           
   281                           ;newmain.c: 48:     TRISB = 0x00;
   282     0041  1683               	bsf	3,5	;RP0=1, select bank1
   283     0042  1303               	bcf	3,6	;RP1=0, select bank1
   284     0043  0186               	clrf	6	;volatile
   285     0044                     l631:
   286                           
   287                           ;newmain.c: 51:     {;newmain.c: 53:         PORTB = Data;
   288     0044  0872               	movf	_Data,w
   289     0045  1283               	bcf	3,5	;RP0=0, select bank0
   290     0046  0086               	movwf	6	;volatile
   291     0047  2844               	goto	l631
   292     0048  120A  118A  280C   	ljmp	start
   293     004B                     __end_of_main:
   294                           
   295                           	psect	text1
   296     0014                     __ptext1:	
   297 ;; *************** function _SPI_Slave_Init *****************
   298 ;; Defined at:
   299 ;;		line 61 in file "newmain.c"
   300 ;; Parameters:    Size  Location     Type
   301 ;;		None
   302 ;; Auto vars:     Size  Location     Type
   303 ;;		None
   304 ;; Return value:  Size  Location     Type
   305 ;;                  1    wreg      void 
   306 ;; Registers used:
   307 ;;		None
   308 ;; Tracked objects:
   309 ;;		On entry : 0/0
   310 ;;		On exit  : 0/0
   311 ;;		Unchanged: 0/0
   312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   313 ;;      Params:         0       0       0       0       0
   314 ;;      Locals:         0       0       0       0       0
   315 ;;      Temps:          0       0       0       0       0
   316 ;;      Totals:         0       0       0       0       0
   317 ;;Total ram usage:        0 bytes
   318 ;; Hardware stack levels used: 1
   319 ;; Hardware stack levels required when called: 1
   320 ;; This function calls:
   321 ;;		Nothing
   322 ;; This function is called by:
   323 ;;		_main
   324 ;; This function uses a non-reentrant model
   325 ;;
   326                           
   327     0014                     _SPI_Slave_Init:	
   328                           ;psect for function _SPI_Slave_Init
   329                           
   330     0014                     l619:	
   331                           ;incstack = 0
   332                           ; Regs used in _SPI_Slave_Init: []
   333                           
   334                           
   335                           ;newmain.c: 64:     SSPM0 = 0;
   336     0014  1283               	bcf	3,5	;RP0=0, select bank0
   337     0015  1303               	bcf	3,6	;RP1=0, select bank0
   338     0016  1014               	bcf	20,0	;volatile
   339                           
   340                           ;newmain.c: 65:     SSPM1 = 0;
   341     0017  1094               	bcf	20,1	;volatile
   342                           
   343                           ;newmain.c: 66:     SSPM2 = 1;
   344     0018  1514               	bsf	20,2	;volatile
   345                           
   346                           ;newmain.c: 67:     SSPM3 = 0;
   347     0019  1194               	bcf	20,3	;volatile
   348                           
   349                           ;newmain.c: 70:     SSPEN = 1;
   350     001A  1694               	bsf	20,5	;volatile
   351                           
   352                           ;newmain.c: 73:     CKP = 0;
   353     001B  1214               	bcf	20,4	;volatile
   354                           
   355                           ;newmain.c: 74:     CKE = 0;
   356     001C  1683               	bsf	3,5	;RP0=1, select bank1
   357     001D  1303               	bcf	3,6	;RP1=0, select bank1
   358     001E  1314               	bcf	20,6	;volatile
   359                           
   360                           ;newmain.c: 77:     SMP = 0;
   361     001F  1394               	bcf	20,7	;volatile
   362                           
   363                           ;newmain.c: 80:     TRISC5 = 0;
   364     0020  1287               	bcf	7,5	;volatile
   365                           
   366                           ;newmain.c: 81:     TRISC4 = 1;
   367     0021  1607               	bsf	7,4	;volatile
   368                           
   369                           ;newmain.c: 82:     TRISC3 = 1;
   370     0022  1587               	bsf	7,3	;volatile
   371                           
   372                           ;newmain.c: 83:     PCFG3 = 0;
   373     0023  119F               	bcf	31,3	;volatile
   374                           
   375                           ;newmain.c: 84:     PCFG2 = 1;
   376     0024  151F               	bsf	31,2	;volatile
   377                           
   378                           ;newmain.c: 85:     PCFG1 = 0;
   379     0025  109F               	bcf	31,1	;volatile
   380                           
   381                           ;newmain.c: 86:     PCFG0 = 0;
   382     0026  101F               	bcf	31,0	;volatile
   383                           
   384                           ;newmain.c: 87:     TRISA5 = 1;
   385     0027  1685               	bsf	5,5	;volatile
   386                           
   387                           ;newmain.c: 90:     SSPIE = 1;
   388     0028  158C               	bsf	12,3	;volatile
   389                           
   390                           ;newmain.c: 91:     PEIE = 1;
   391     0029  170B               	bsf	11,6	;volatile
   392                           
   393                           ;newmain.c: 92:     GIE = 1;
   394     002A  178B               	bsf	11,7	;volatile
   395     002B                     l71:
   396     002B  0008               	return
   397     002C                     __end_of_SPI_Slave_Init:
   398                           
   399                           	psect	text2
   400     002C                     __ptext2:	
   401 ;; *************** function _ISR *****************
   402 ;; Defined at:
   403 ;;		line 35 in file "newmain.c"
   404 ;; Parameters:    Size  Location     Type
   405 ;;		None
   406 ;; Auto vars:     Size  Location     Type
   407 ;;		None
   408 ;; Return value:  Size  Location     Type
   409 ;;                  1    wreg      void 
   410 ;; Registers used:
   411 ;;		wreg
   412 ;; Tracked objects:
   413 ;;		On entry : 0/0
   414 ;;		On exit  : 0/0
   415 ;;		Unchanged: 0/0
   416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   417 ;;      Params:         0       0       0       0       0
   418 ;;      Locals:         0       0       0       0       0
   419 ;;      Temps:          2       0       0       0       0
   420 ;;      Totals:         2       0       0       0       0
   421 ;;Total ram usage:        2 bytes
   422 ;; Hardware stack levels used: 1
   423 ;; This function calls:
   424 ;;		Nothing
   425 ;; This function is called by:
   426 ;;		Interrupt level 1
   427 ;; This function uses a non-reentrant model
   428 ;;
   429                           
   430     002C                     _ISR:	
   431                           ;psect for function _ISR
   432                           
   433     002C                     i1l621:
   434                           
   435                           ;newmain.c: 37:     if(SSPIF)
   436     002C  1283               	bcf	3,5	;RP0=0, select bank0
   437     002D  1303               	bcf	3,6	;RP1=0, select bank0
   438     002E  1D8C               	btfss	12,3	;volatile
   439     002F  2831               	goto	u1_21
   440     0030  2832               	goto	u1_20
   441     0031                     u1_21:
   442     0031  2835               	goto	i1l60
   443     0032                     u1_20:
   444     0032                     i1l623:
   445                           
   446                           ;newmain.c: 38:     {;newmain.c: 39:         Data = SSPBUF;
   447     0032  0813               	movf	19,w	;volatile
   448     0033  00F2               	movwf	_Data
   449     0034                     i1l625:
   450                           
   451                           ;newmain.c: 40:         SSPIF = 0;
   452     0034  118C               	bcf	12,3	;volatile
   453     0035                     i1l60:
   454     0035  0871               	movf	??_ISR+1,w
   455     0036  008A               	movwf	10
   456     0037  0E70               	swapf	??_ISR,w
   457     0038  0083               	movwf	3
   458     0039  0EFE               	swapf	btemp,f
   459     003A  0E7E               	swapf	btemp,w
   460     003B  0009               	retfie
   461     003C                     __end_of_ISR:
   462     007E                     btemp	set	126	;btemp
   463     007E                     wtemp0	set	126
   464                           
   465                           	psect	intentry
   466     0004                     __pintentry:	
   467                           ;incstack = 0
   468                           ; Regs used in _ISR: [wreg]
   469                           
   470     0004                     interrupt_function:
   471     007E                     saved_w	set	btemp
   472     0004  00FE               	movwf	btemp
   473     0005  0E03               	swapf	3,w
   474     0006  00F0               	movwf	??_ISR
   475     0007  080A               	movf	10,w
   476     0008  00F1               	movwf	??_ISR+1
   477     0009  120A  118A  282C   	ljmp	_ISR
   478                           
   479                           	psect	config
   480                           
   481                           ;Config register CONFIG @ 0x2007
   482                           ;	Oscillator Selection bits
   483                           ;	FOSC = XT, XT oscillator
   484                           ;	Watchdog Timer Enable bit
   485                           ;	WDTE = OFF, WDT disabled
   486                           ;	Power-up Timer Enable bit
   487                           ;	PWRTE = OFF, PWRT disabled
   488                           ;	Brown-out Reset Enable bit
   489                           ;	BOREN = ON, BOR enabled
   490                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   491                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   492                           ;	Data EEPROM Memory Code Protection bit
   493                           ;	CPD = OFF, Data EEPROM code protection off
   494                           ;	Flash Program Memory Write Enable bits
   495                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   496                           ;	In-Circuit Debugger Mode bit
   497                           ;	DEBUG = 0x1, unprogrammed default
   498                           ;	Flash Program Memory Code Protection bit
   499                           ;	CP = OFF, Code protection off
   500     2007                     	org	8199
   501     2007  3F79               	dw	16249

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                     _SPI_Slave_Init
 ---------------------------------------------------------------------------------
 (1) _SPI_Slave_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_Slave_Init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       3       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       3      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu May 23 14:37:32 2024

                     _BF 04A0                       l71 002B                      l631 0044  
                    l619 0014                      l627 003C                      l629 0041  
                    _CKE 04A6                      _CKP 00A4                      _GIE 005F  
                    _ISR 002C                      _SMP 04A7                     ?_ISR 0070  
                   _PEIE 005E                     i1l60 0035                     _Data 0072  
                   u1_20 0032                     u1_21 0031                     _main 003C  
                   btemp 007E           _SPI_Slave_Init 0014                     start 000C  
                  ??_ISR 0070                    ?_main 0070                    _PCFG0 04F8  
                  _PCFG1 04F9                    _PCFG2 04FA                    _PCFG3 04FB  
                  i1l621 002C                    i1l623 0032                    i1l625 0034  
                  _PORTB 0006                    _SSPM0 00A0                    _SSPM1 00A1  
                  _SSPM2 00A2                    _SSPM3 00A3                    _TRISB 0086  
                  _SSPIE 0463                    _SSPIF 0063                    _SSPEN 00A5  
                  _SSPOV 00A6                    pclath 000A   __end_of_SPI_Slave_Init 002C  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 004B                   ??_main 0072          ?_SPI_Slave_Init 0070  
                 _TRISA5 042D                   _TRISC3 043B                   _TRISC4 043C  
                 _TRISC5 043D                   _SSPBUF 0013                   saved_w 007E  
__end_of__initialization 0010           __pcstackCOMMON 0070               __pmaintext 003C  
             __pintentry 0004                  __ptext1 0014                  __ptext2 002C  
       ??_SPI_Slave_Init 0072     end_of_initialization 0010      start_initialization 000F  
            __end_of_ISR 003C              __pbssCOMMON 0072                ___latbits 0002  
      interrupt_function 0004                 intlevel1 0000  
