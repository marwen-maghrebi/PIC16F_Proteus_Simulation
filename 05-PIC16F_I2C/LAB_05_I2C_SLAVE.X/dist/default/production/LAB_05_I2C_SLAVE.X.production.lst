

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu May 23 16:07:19 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 12/10/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0000                     	;# 
    48     0001                     	;# 
    49     0002                     	;# 
    50     0003                     	;# 
    51     0004                     	;# 
    52     0005                     	;# 
    53     0006                     	;# 
    54     0007                     	;# 
    55     0008                     	;# 
    56     0009                     	;# 
    57     000A                     	;# 
    58     000B                     	;# 
    59     000C                     	;# 
    60     000D                     	;# 
    61     000E                     	;# 
    62     000E                     	;# 
    63     000F                     	;# 
    64     0010                     	;# 
    65     0011                     	;# 
    66     0012                     	;# 
    67     0013                     	;# 
    68     0014                     	;# 
    69     0015                     	;# 
    70     0015                     	;# 
    71     0016                     	;# 
    72     0017                     	;# 
    73     0018                     	;# 
    74     0019                     	;# 
    75     001A                     	;# 
    76     001B                     	;# 
    77     001B                     	;# 
    78     001C                     	;# 
    79     001D                     	;# 
    80     001E                     	;# 
    81     001F                     	;# 
    82     0081                     	;# 
    83     0085                     	;# 
    84     0086                     	;# 
    85     0087                     	;# 
    86     0088                     	;# 
    87     0089                     	;# 
    88     008C                     	;# 
    89     008D                     	;# 
    90     008E                     	;# 
    91     0091                     	;# 
    92     0092                     	;# 
    93     0093                     	;# 
    94     0094                     	;# 
    95     0098                     	;# 
    96     0099                     	;# 
    97     009C                     	;# 
    98     009D                     	;# 
    99     009E                     	;# 
   100     009F                     	;# 
   101     010C                     	;# 
   102     010D                     	;# 
   103     010E                     	;# 
   104     010F                     	;# 
   105     018C                     	;# 
   106     018D                     	;# 
   107     0000                     	;# 
   108     0001                     	;# 
   109     0002                     	;# 
   110     0003                     	;# 
   111     0004                     	;# 
   112     0005                     	;# 
   113     0006                     	;# 
   114     0007                     	;# 
   115     0008                     	;# 
   116     0009                     	;# 
   117     000A                     	;# 
   118     000B                     	;# 
   119     000C                     	;# 
   120     000D                     	;# 
   121     000E                     	;# 
   122     000E                     	;# 
   123     000F                     	;# 
   124     0010                     	;# 
   125     0011                     	;# 
   126     0012                     	;# 
   127     0013                     	;# 
   128     0014                     	;# 
   129     0015                     	;# 
   130     0015                     	;# 
   131     0016                     	;# 
   132     0017                     	;# 
   133     0018                     	;# 
   134     0019                     	;# 
   135     001A                     	;# 
   136     001B                     	;# 
   137     001B                     	;# 
   138     001C                     	;# 
   139     001D                     	;# 
   140     001E                     	;# 
   141     001F                     	;# 
   142     0081                     	;# 
   143     0085                     	;# 
   144     0086                     	;# 
   145     0087                     	;# 
   146     0088                     	;# 
   147     0089                     	;# 
   148     008C                     	;# 
   149     008D                     	;# 
   150     008E                     	;# 
   151     0091                     	;# 
   152     0092                     	;# 
   153     0093                     	;# 
   154     0094                     	;# 
   155     0098                     	;# 
   156     0099                     	;# 
   157     009C                     	;# 
   158     009D                     	;# 
   159     009E                     	;# 
   160     009F                     	;# 
   161     010C                     	;# 
   162     010D                     	;# 
   163     010E                     	;# 
   164     010F                     	;# 
   165     018C                     	;# 
   166     018D                     	;# 
   167     0014                     _SSPCON	set	20
   168     0006                     _PORTB	set	6
   169     0013                     _SSPBUF	set	19
   170     005E                     _PEIE	set	94
   171     005F                     _GIE	set	95
   172     00A4                     _CKP	set	164
   173     0063                     _SSPIF	set	99
   174     0091                     _SSPCON2	set	145
   175     0094                     _SSPSTAT	set	148
   176     0093                     _SSPADD	set	147
   177     0086                     _TRISB	set	134
   178     0463                     _SSPIE	set	1123
   179     043C                     _TRISC4	set	1084
   180     043B                     _TRISC3	set	1083
   181     04A0                     _BF	set	1184
   182     04A2                     _R_nW	set	1186
   183     04A5                     _D_nA	set	1189
   184     040F                     _nRBPU	set	1039
   185                           
   186                           	psect	cinit
   187     000F                     start_initialization:	
   188                           ; #config settings
   189                           
   190     000F                     __initialization:
   191     000F                     end_of_initialization:	
   192                           ;End of C runtime variable initialization code
   193                           
   194     000F                     __end_of__initialization:
   195     000F  0183               	clrf	3
   196     0010  120A  118A  2855   	ljmp	_main	;jump to C main() function
   197                           
   198                           	psect	cstackCOMMON
   199     0070                     __pcstackCOMMON:
   200     0070                     ?_I2C_Slave_Init:
   201     0070                     ?_main:	
   202                           ; 1 bytes @ 0x0
   203                           
   204     0070                     ?_ISR:	
   205                           ; 1 bytes @ 0x0
   206                           
   207     0070                     ??_ISR:	
   208                           ; 1 bytes @ 0x0
   209                           
   210                           
   211                           ; 1 bytes @ 0x0
   212     0070                     	ds	2
   213     0072                     ISR@dummy:
   214                           
   215                           ; 1 bytes @ 0x2
   216     0072                     	ds	1
   217     0073                     ??_I2C_Slave_Init:
   218     0073                     I2C_Slave_Init@address:	
   219                           ; 1 bytes @ 0x3
   220                           
   221                           
   222                           ; 1 bytes @ 0x3
   223     0073                     	ds	1
   224     0074                     ??_main:
   225                           
   226                           	psect	maintext
   227     0055                     __pmaintext:	
   228                           ; 1 bytes @ 0x4
   229 ;;
   230 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   231 ;;
   232 ;; *************** function _main *****************
   233 ;; Defined at:
   234 ;;		line 27 in file "slave.c"
   235 ;; Parameters:    Size  Location     Type
   236 ;;		None
   237 ;; Auto vars:     Size  Location     Type
   238 ;;		None
   239 ;; Return value:  Size  Location     Type
   240 ;;                  1    wreg      void 
   241 ;; Registers used:
   242 ;;		wreg, status,2, status,0, pclath, cstack
   243 ;; Tracked objects:
   244 ;;		On entry : B00/0
   245 ;;		On exit  : 0/0
   246 ;;		Unchanged: 0/0
   247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   248 ;;      Params:         0       0       0       0       0
   249 ;;      Locals:         0       0       0       0       0
   250 ;;      Temps:          0       0       0       0       0
   251 ;;      Totals:         0       0       0       0       0
   252 ;;Total ram usage:        0 bytes
   253 ;; Hardware stack levels required when called: 2
   254 ;; This function calls:
   255 ;;		_I2C_Slave_Init
   256 ;; This function is called by:
   257 ;;		Startup code after reset
   258 ;; This function uses a non-reentrant model
   259 ;;
   260                           
   261     0055                     _main:	
   262                           ;psect for function _main
   263                           
   264     0055                     l617:	
   265                           ;incstack = 0
   266                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   267                           
   268                           
   269                           ;slave.c: 29:     TRISB = 0xFF;
   270     0055  30FF               	movlw	255
   271     0056  1683               	bsf	3,5	;RP0=1, select bank1
   272     0057  1303               	bcf	3,6	;RP1=0, select bank1
   273     0058  0086               	movwf	6	;volatile
   274     0059                     l619:
   275                           
   276                           ;slave.c: 30:     nRBPU = 0;
   277     0059  1381               	bcf	1,7	;volatile
   278     005A                     l621:
   279                           
   280                           ;slave.c: 33:     I2C_Slave_Init(0x40);
   281     005A  3040               	movlw	64
   282     005B  120A  118A  203B  120A  118A  	fcall	_I2C_Slave_Init
   283     0060                     l43:	
   284                           ;slave.c: 35:     while (1) {
   285                           
   286     0060                     l44:	
   287                           ;slave.c: 37:     }
   288                           
   289     0060  2860               	goto	l43
   290     0061  120A  118A  280C   	ljmp	start
   291     0064                     __end_of_main:
   292                           
   293                           	psect	text1
   294     003B                     __ptext1:	
   295 ;; *************** function _I2C_Slave_Init *****************
   296 ;; Defined at:
   297 ;;		line 53 in file "slave.c"
   298 ;; Parameters:    Size  Location     Type
   299 ;;  address         1    wreg     unsigned char 
   300 ;; Auto vars:     Size  Location     Type
   301 ;;  address         1    3[COMMON] unsigned char 
   302 ;; Return value:  Size  Location     Type
   303 ;;                  1    wreg      void 
   304 ;; Registers used:
   305 ;;		wreg
   306 ;; Tracked objects:
   307 ;;		On entry : 0/0
   308 ;;		On exit  : 0/0
   309 ;;		Unchanged: 0/0
   310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   311 ;;      Params:         0       0       0       0       0
   312 ;;      Locals:         1       0       0       0       0
   313 ;;      Temps:          0       0       0       0       0
   314 ;;      Totals:         1       0       0       0       0
   315 ;;Total ram usage:        1 bytes
   316 ;; Hardware stack levels used: 1
   317 ;; Hardware stack levels required when called: 1
   318 ;; This function calls:
   319 ;;		Nothing
   320 ;; This function is called by:
   321 ;;		_main
   322 ;; This function uses a non-reentrant model
   323 ;;
   324                           
   325     003B                     _I2C_Slave_Init:	
   326                           ;psect for function _I2C_Slave_Init
   327                           
   328                           
   329                           ;incstack = 0
   330                           ; Regs used in _I2C_Slave_Init: [wreg]
   331                           ;I2C_Slave_Init@address stored from wreg
   332     003B  00F3               	movwf	I2C_Slave_Init@address
   333     003C                     l603:
   334                           
   335                           ;slave.c: 54:     SSPADD = address;
   336     003C  0873               	movf	I2C_Slave_Init@address,w
   337     003D  1683               	bsf	3,5	;RP0=1, select bank1
   338     003E  1303               	bcf	3,6	;RP1=0, select bank1
   339     003F  0093               	movwf	19	;volatile
   340                           
   341                           ;slave.c: 55:     SSPSTAT = 0x80;
   342     0040  3080               	movlw	128
   343     0041  0094               	movwf	20	;volatile
   344                           
   345                           ;slave.c: 56:     SSPCON = 0x36;
   346     0042  3036               	movlw	54
   347     0043  1283               	bcf	3,5	;RP0=0, select bank0
   348     0044  1303               	bcf	3,6	;RP1=0, select bank0
   349     0045  0094               	movwf	20	;volatile
   350                           
   351                           ;slave.c: 57:     SSPCON2 = 0x01;
   352     0046  3001               	movlw	1
   353     0047  1683               	bsf	3,5	;RP0=1, select bank1
   354     0048  1303               	bcf	3,6	;RP1=0, select bank1
   355     0049  0091               	movwf	17	;volatile
   356     004A                     l605:
   357                           
   358                           ;slave.c: 58:     TRISC3 = 1;
   359     004A  1587               	bsf	7,3	;volatile
   360     004B                     l607:
   361                           
   362                           ;slave.c: 59:     TRISC4 = 1;
   363     004B  1607               	bsf	7,4	;volatile
   364     004C                     l609:
   365                           
   366                           ;slave.c: 60:     GIE = 1;
   367     004C  178B               	bsf	11,7	;volatile
   368     004D                     l611:
   369                           
   370                           ;slave.c: 61:     PEIE = 1;
   371     004D  170B               	bsf	11,6	;volatile
   372     004E                     l613:
   373                           
   374                           ;slave.c: 62:     SSPIF = 0;
   375     004E  1283               	bcf	3,5	;RP0=0, select bank0
   376     004F  1303               	bcf	3,6	;RP1=0, select bank0
   377     0050  118C               	bcf	12,3	;volatile
   378     0051                     l615:
   379                           
   380                           ;slave.c: 63:     SSPIE = 1;
   381     0051  1683               	bsf	3,5	;RP0=1, select bank1
   382     0052  1303               	bcf	3,6	;RP1=0, select bank1
   383     0053  158C               	bsf	12,3	;volatile
   384     0054                     l59:
   385     0054  0008               	return
   386     0055                     __end_of_I2C_Slave_Init:
   387                           
   388                           	psect	text2
   389     0013                     __ptext2:	
   390 ;; *************** function _ISR *****************
   391 ;; Defined at:
   392 ;;		line 40 in file "slave.c"
   393 ;; Parameters:    Size  Location     Type
   394 ;;		None
   395 ;; Auto vars:     Size  Location     Type
   396 ;;  dummy           1    2[COMMON] volatile unsigned char 
   397 ;; Return value:  Size  Location     Type
   398 ;;                  1    wreg      void 
   399 ;; Registers used:
   400 ;;		wreg
   401 ;; Tracked objects:
   402 ;;		On entry : 0/0
   403 ;;		On exit  : 0/0
   404 ;;		Unchanged: 0/0
   405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   406 ;;      Params:         0       0       0       0       0
   407 ;;      Locals:         1       0       0       0       0
   408 ;;      Temps:          2       0       0       0       0
   409 ;;      Totals:         3       0       0       0       0
   410 ;;Total ram usage:        3 bytes
   411 ;; Hardware stack levels used: 1
   412 ;; This function calls:
   413 ;;		Nothing
   414 ;; This function is called by:
   415 ;;		Interrupt level 1
   416 ;; This function uses a non-reentrant model
   417 ;;
   418                           
   419     0013                     _ISR:	
   420                           ;psect for function _ISR
   421                           
   422     0013                     i1l623:
   423                           
   424                           ;slave.c: 41:     if (SSPIF) {
   425     0013  1283               	bcf	3,5	;RP0=0, select bank0
   426     0014  1303               	bcf	3,6	;RP1=0, select bank0
   427     0015  1D8C               	btfss	12,3	;volatile
   428     0016  2818               	goto	u1_21
   429     0017  2819               	goto	u1_20
   430     0018                     u1_21:
   431     0018  2834               	goto	i1l56
   432     0019                     u1_20:
   433     0019                     i1l625:
   434                           
   435                           ;slave.c: 42:         if (!D_nA && R_nW) {
   436     0019  1683               	bsf	3,5	;RP0=1, select bank1
   437     001A  1303               	bcf	3,6	;RP1=0, select bank1
   438     001B  1A94               	btfsc	20,5	;volatile
   439     001C  281E               	goto	u2_21
   440     001D  281F               	goto	u2_20
   441     001E                     u2_21:
   442     001E  2830               	goto	i1l52
   443     001F                     u2_20:
   444     001F                     i1l627:
   445     001F  1D14               	btfss	20,2	;volatile
   446     0020  2822               	goto	u3_21
   447     0021  2823               	goto	u3_20
   448     0022                     u3_21:
   449     0022  2830               	goto	i1l52
   450     0023                     u3_20:
   451     0023                     i1l629:
   452                           
   453                           ;slave.c: 43:             volatile char dummy = SSPBUF;
   454     0023  1283               	bcf	3,5	;RP0=0, select bank0
   455     0024  1303               	bcf	3,6	;RP1=0, select bank0
   456     0025  0813               	movf	19,w	;volatile
   457     0026  00F2               	movwf	ISR@dummy	;volatile
   458                           
   459                           ;slave.c: 44:             SSPBUF = PORTB;
   460     0027  0806               	movf	6,w	;volatile
   461     0028  0093               	movwf	19	;volatile
   462     0029                     i1l631:
   463                           
   464                           ;slave.c: 45:             CKP = 1;
   465     0029  1614               	bsf	20,4	;volatile
   466     002A                     i1l53:	
   467                           ;slave.c: 46:             while (BF);
   468                           
   469     002A  1683               	bsf	3,5	;RP0=1, select bank1
   470     002B  1303               	bcf	3,6	;RP1=0, select bank1
   471     002C  1814               	btfsc	20,0	;volatile
   472     002D  282F               	goto	u4_21
   473     002E  2830               	goto	u4_20
   474     002F                     u4_21:
   475     002F  282A               	goto	i1l53
   476     0030                     u4_20:
   477     0030                     i1l52:	
   478                           ;slave.c: 47:         }
   479                           
   480                           
   481                           ;slave.c: 48:         CKP = 1;
   482     0030  1283               	bcf	3,5	;RP0=0, select bank0
   483     0031  1303               	bcf	3,6	;RP1=0, select bank0
   484     0032  1614               	bsf	20,4	;volatile
   485                           
   486                           ;slave.c: 49:         SSPIF = 0;
   487     0033  118C               	bcf	12,3	;volatile
   488     0034                     i1l56:
   489     0034  0871               	movf	??_ISR+1,w
   490     0035  008A               	movwf	10
   491     0036  0E70               	swapf	??_ISR,w
   492     0037  0083               	movwf	3
   493     0038  0EFE               	swapf	btemp,f
   494     0039  0E7E               	swapf	btemp,w
   495     003A  0009               	retfie
   496     003B                     __end_of_ISR:
   497     007E                     btemp	set	126	;btemp
   498     007E                     wtemp0	set	126
   499                           
   500                           	psect	intentry
   501     0004                     __pintentry:	
   502                           ;incstack = 0
   503                           ; Regs used in _ISR: [wreg]
   504                           
   505     0004                     interrupt_function:
   506     007E                     saved_w	set	btemp
   507     0004  00FE               	movwf	btemp
   508     0005  0E03               	swapf	3,w
   509     0006  00F0               	movwf	??_ISR
   510     0007  080A               	movf	10,w
   511     0008  00F1               	movwf	??_ISR+1
   512     0009  120A  118A  2813   	ljmp	_ISR
   513                           
   514                           	psect	config
   515                           
   516                           ;Config register CONFIG @ 0x2007
   517                           ;	Oscillator Selection bits
   518                           ;	FOSC = HS, HS oscillator
   519                           ;	Watchdog Timer Enable bit
   520                           ;	WDTE = OFF, WDT disabled
   521                           ;	Power-up Timer Enable bit
   522                           ;	PWRTE = OFF, PWRT disabled
   523                           ;	Brown-out Reset Enable bit
   524                           ;	BOREN = ON, BOR enabled
   525                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   526                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   527                           ;	Data EEPROM Memory Code Protection bit
   528                           ;	CPD = OFF, Data EEPROM code protection off
   529                           ;	Flash Program Memory Write Enable bits
   530                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   531                           ;	In-Circuit Debugger Mode bit
   532                           ;	DEBUG = 0x1, unprogrammed default
   533                           ;	Flash Program Memory Code Protection bit
   534                           ;	CP = OFF, Code protection off
   535     2007                     	org	8199
   536     2007  3F7A               	dw	16250

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_I2C_Slave_Init

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      15
                     _I2C_Slave_Init
 ---------------------------------------------------------------------------------
 (1) _I2C_Slave_Init                                       1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Slave_Init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu May 23 16:07:19 2024

                     _BF 04A0                       l43 0060                       l44 0060  
                     l59 0054                      l611 004D                      l603 003C  
                    l613 004E                      l605 004A                      l621 005A  
                    l615 0051                      l607 004B                      l609 004C  
                    l617 0055                      l619 0059                      _CKP 00A4  
                    _GIE 005F                      _ISR 0013                     ?_ISR 0070  
                   _PEIE 005E                     i1l52 0030                     i1l53 002A  
                   i1l56 0034                     _D_nA 04A5                     u1_20 0019  
                   u1_21 0018                     u2_20 001F                     u2_21 001E  
                   u3_20 0023                     u3_21 0022                     u4_20 0030  
                   u4_21 002F                     _R_nW 04A2                     _main 0055  
                   btemp 007E                     start 000C                    ??_ISR 0070  
                  ?_main 0070                    i1l631 0029                    i1l623 0013  
                  i1l625 0019                    i1l627 001F                    i1l629 0023  
                  _PORTB 0006                    _TRISB 0086                    _SSPIE 0463  
                  _SSPIF 0063                    _nRBPU 040F                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0064                   ??_main 0074                   _SSPADD 0093  
                 _TRISC3 043B                   _TRISC4 043C                   _SSPBUF 0013  
                 _SSPCON 0014                   saved_w 007E  __end_of__initialization 000F  
         __pcstackCOMMON 0070    I2C_Slave_Init@address 0073               __pmaintext 0055  
             __pintentry 0004                  _SSPCON2 0091                  _SSPSTAT 0094  
                __ptext1 003B                  __ptext2 0013     end_of_initialization 000F  
         _I2C_Slave_Init 003B   __end_of_I2C_Slave_Init 0055      start_initialization 000F  
            __end_of_ISR 003B          ?_I2C_Slave_Init 0070                ___latbits 0002  
               ISR@dummy 0072        interrupt_function 0004         ??_I2C_Slave_Init 0073  
               intlevel1 0000  
