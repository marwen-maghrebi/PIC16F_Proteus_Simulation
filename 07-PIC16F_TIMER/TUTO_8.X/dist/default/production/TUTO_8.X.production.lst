

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri May 24 10:16:56 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28     0000                     
    29                           ; Generated 12/10/2023 GMT
    30                           ; 
    31                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F877A Definitions
    61                           ; 
    62                           ; SFR Addresses
    63     0000                     	;# 
    64     0001                     	;# 
    65     0002                     	;# 
    66     0003                     	;# 
    67     0004                     	;# 
    68     0005                     	;# 
    69     0006                     	;# 
    70     0007                     	;# 
    71     0008                     	;# 
    72     0009                     	;# 
    73     000A                     	;# 
    74     000B                     	;# 
    75     000C                     	;# 
    76     000D                     	;# 
    77     000E                     	;# 
    78     000E                     	;# 
    79     000F                     	;# 
    80     0010                     	;# 
    81     0011                     	;# 
    82     0012                     	;# 
    83     0013                     	;# 
    84     0014                     	;# 
    85     0015                     	;# 
    86     0015                     	;# 
    87     0016                     	;# 
    88     0017                     	;# 
    89     0018                     	;# 
    90     0019                     	;# 
    91     001A                     	;# 
    92     001B                     	;# 
    93     001B                     	;# 
    94     001C                     	;# 
    95     001D                     	;# 
    96     001E                     	;# 
    97     001F                     	;# 
    98     0081                     	;# 
    99     0085                     	;# 
   100     0086                     	;# 
   101     0087                     	;# 
   102     0088                     	;# 
   103     0089                     	;# 
   104     008C                     	;# 
   105     008D                     	;# 
   106     008E                     	;# 
   107     0091                     	;# 
   108     0092                     	;# 
   109     0093                     	;# 
   110     0094                     	;# 
   111     0098                     	;# 
   112     0099                     	;# 
   113     009C                     	;# 
   114     009D                     	;# 
   115     009E                     	;# 
   116     009F                     	;# 
   117     010C                     	;# 
   118     010D                     	;# 
   119     010E                     	;# 
   120     010F                     	;# 
   121     018C                     	;# 
   122     018D                     	;# 
   123     0000                     	;# 
   124     0001                     	;# 
   125     0002                     	;# 
   126     0003                     	;# 
   127     0004                     	;# 
   128     0005                     	;# 
   129     0006                     	;# 
   130     0007                     	;# 
   131     0008                     	;# 
   132     0009                     	;# 
   133     000A                     	;# 
   134     000B                     	;# 
   135     000C                     	;# 
   136     000D                     	;# 
   137     000E                     	;# 
   138     000E                     	;# 
   139     000F                     	;# 
   140     0010                     	;# 
   141     0011                     	;# 
   142     0012                     	;# 
   143     0013                     	;# 
   144     0014                     	;# 
   145     0015                     	;# 
   146     0015                     	;# 
   147     0016                     	;# 
   148     0017                     	;# 
   149     0018                     	;# 
   150     0019                     	;# 
   151     001A                     	;# 
   152     001B                     	;# 
   153     001B                     	;# 
   154     001C                     	;# 
   155     001D                     	;# 
   156     001E                     	;# 
   157     001F                     	;# 
   158     0081                     	;# 
   159     0085                     	;# 
   160     0086                     	;# 
   161     0087                     	;# 
   162     0088                     	;# 
   163     0089                     	;# 
   164     008C                     	;# 
   165     008D                     	;# 
   166     008E                     	;# 
   167     0091                     	;# 
   168     0092                     	;# 
   169     0093                     	;# 
   170     0094                     	;# 
   171     0098                     	;# 
   172     0099                     	;# 
   173     009C                     	;# 
   174     009D                     	;# 
   175     009E                     	;# 
   176     009F                     	;# 
   177     010C                     	;# 
   178     010D                     	;# 
   179     010E                     	;# 
   180     010F                     	;# 
   181     018C                     	;# 
   182     018D                     	;# 
   183     000B                     _INTCONbits	set	11
   184     0011                     _TMR2	set	17
   185     0012                     _T2CONbits	set	18
   186     0006                     _PORTBbits	set	6
   187     0019                     _TXREG	set	25
   188     0018                     _RCSTAbits	set	24
   189     0061                     _TMR2IF	set	97
   190     0064                     _TXIF	set	100
   191     008C                     _PIE1bits	set	140
   192     0092                     _PR2	set	146
   193     0086                     _TRISBbits	set	134
   194     0099                     _SPBRG	set	153
   195     0098                     _TXSTAbits	set	152
   196     043F                     _TRISC7	set	1087
   197     043E                     _TRISC6	set	1086
   198                           
   199                           	psect	strings
   200     03AE                     __pstrings:
   201     03AE                     stringtab:
   202     03AE                     __stringtab:
   203     03AE                     stringcode:	
   204                           ;	String table - string pointers are 1 byte each
   205                           
   206     03AE                     stringdir:
   207     03AE  3003               	movlw	high stringdir
   208     03AF  008A               	movwf	10
   209     03B0  0804               	movf	4,w
   210     03B1  0A84               	incf	4,f
   211     03B2  0782               	addwf	2,f
   212     03B3                     __stringbase:
   213     03B3  3400               	retlw	0
   214     03B4                     __end_of__stringtab:
   215     03B4                     STR_1:
   216     03B4  344C               	retlw	76	;'L'
   217     03B5  344F               	retlw	79	;'O'
   218     03B6  344F               	retlw	79	;'O'
   219     03B7  3450               	retlw	80	;'P'
   220     03B8  3420               	retlw	32	;' '
   221     03B9  3445               	retlw	69	;'E'
   222     03BA  3458               	retlw	88	;'X'
   223     03BB  3445               	retlw	69	;'E'
   224     03BC  3443               	retlw	67	;'C'
   225     03BD  3455               	retlw	85	;'U'
   226     03BE  3454               	retlw	84	;'T'
   227     03BF  3445               	retlw	69	;'E'
   228     03C0  3420               	retlw	32	;' '
   229     03C1  3425               	retlw	37	;'%'
   230     03C2  346C               	retlw	108	;'l'
   231     03C3  3475               	retlw	117	;'u'
   232     03C4  340D               	retlw	13
   233     03C5  340A               	retlw	10
   234     03C6  3400               	retlw	0
   235                           
   236                           	psect	cinit
   237     0011                     start_initialization:	
   238                           ; #config settings
   239                           
   240     0011                     __initialization:
   241                           
   242                           ; Clear objects allocated to COMMON
   243     0011  01F8               	clrf	__pbssCOMMON& (0+127)
   244     0012  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   245     0013  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   246                           
   247                           ; Clear objects allocated to BANK0
   248     0014  1283               	bcf	3,5	;RP0=0, select bank0
   249     0015  1303               	bcf	3,6	;RP1=0, select bank0
   250     0016  01D0               	clrf	__pbssBANK0& (0+127)
   251                           
   252                           ; Clear objects allocated to BANK1
   253     0017  1383               	bcf	3,7	;select IRP bank0
   254     0018  30A0               	movlw	low __pbssBANK1
   255     0019  0084               	movwf	4
   256     001A  30CA               	movlw	low (__pbssBANK1+42)
   257     001B  120A  118A  23F7  120A  118A  	fcall	clear_ram0
   258     0020                     end_of_initialization:	
   259                           ;End of C runtime variable initialization code
   260                           
   261     0020                     __end_of__initialization:
   262     0020  0183               	clrf	3
   263     0021  120A  118A  29E2   	ljmp	_main	;jump to C main() function
   264                           
   265                           	psect	bssCOMMON
   266     0078                     __pbssCOMMON:
   267     0078                     _interrupt_count2:
   268     0078                     	ds	2
   269     007A                     _interrupt_count1:
   270     007A                     	ds	1
   271                           
   272                           	psect	bssBANK0
   273     0050                     __pbssBANK0:
   274     0050                     _flags:
   275     0050                     	ds	1
   276                           
   277                           	psect	bssBANK1
   278     00A0                     __pbssBANK1:
   279     00A0                     _dbuf:
   280     00A0                     	ds	32
   281     00C0                     _width:
   282     00C0                     	ds	2
   283     00C2                     _prec:
   284     00C2                     	ds	2
   285     00C4                     _interrupt_count5:
   286     00C4                     	ds	2
   287     00C6                     _interrupt_count4:
   288     00C6                     	ds	2
   289     00C8                     _interrupt_count3:
   290     00C8                     	ds	2
   291                           
   292                           	psect	clrtext
   293     03F7                     clear_ram0:	
   294                           ;	Called with FSR containing the base address, and
   295                           ;	W with the last address+1
   296                           
   297     03F7  0064               	clrwdt	;clear the watchdog before getting into this loop
   298     03F8                     clrloop0:
   299     03F8  0180               	clrf	0	;clear RAM location pointed to by FSR
   300     03F9  0A84               	incf	4,f	;increment pointer
   301     03FA  0604               	xorwf	4,w	;XOR with final address
   302     03FB  1903               	btfsc	3,2	;have we reached the end yet?
   303     03FC  3400               	retlw	0	;all done for this memory range, return
   304     03FD  0604               	xorwf	4,w	;XOR again to restore value
   305     03FE  2BF8               	goto	clrloop0	;do the next byte
   306                           
   307                           	psect	cstackBANK1
   308     00CA                     __pcstackBANK1:
   309     00CA                     main@buffer:
   310                           
   311                           ; 32 bytes @ 0x0
   312     00CA                     	ds	32
   313     00EA                     main@loop_counter:
   314                           
   315                           ; 4 bytes @ 0x20
   316     00EA                     	ds	4
   317                           
   318                           	psect	cstackCOMMON
   319     0070                     __pcstackCOMMON:
   320     0070                     ?_putch:
   321     0070                     ?_UART_Init:	
   322                           ; 1 bytes @ 0x0
   323                           
   324     0070                     ?_UART_Transmit:	
   325                           ; 1 bytes @ 0x0
   326                           
   327     0070                     ?_UART_SendString:	
   328                           ; 1 bytes @ 0x0
   329                           
   330     0070                     ?_ISR:	
   331                           ; 1 bytes @ 0x0
   332                           
   333     0070                     ??_ISR:	
   334                           ; 1 bytes @ 0x0
   335                           
   336     0070                     ?_main:	
   337                           ; 1 bytes @ 0x0
   338                           
   339     0070                     putch@c:	
   340                           ; 1 bytes @ 0x0
   341                           
   342                           
   343                           ; 1 bytes @ 0x0
   344     0070                     	ds	3
   345     0073                     ??_putch:
   346     0073                     ??_UART_Init:	
   347                           ; 1 bytes @ 0x3
   348                           
   349     0073                     ??_UART_Transmit:	
   350                           ; 1 bytes @ 0x3
   351                           
   352     0073                     ??___lldiv:	
   353                           ; 1 bytes @ 0x3
   354                           
   355     0073                     ??___llmod:	
   356                           ; 1 bytes @ 0x3
   357                           
   358     0073                     ?_fputc:	
   359                           ; 1 bytes @ 0x3
   360                           
   361     0073                     UART_Transmit@data:	
   362                           ; 2 bytes @ 0x3
   363                           
   364     0073                     fputc@c:	
   365                           ; 1 bytes @ 0x3
   366                           
   367                           
   368                           ; 2 bytes @ 0x3
   369     0073                     	ds	1
   370     0074                     ??_UART_SendString:
   371     0074                     UART_SendString@str:	
   372                           ; 1 bytes @ 0x4
   373                           
   374     0074                     ___llmod@counter:	
   375                           ; 1 bytes @ 0x4
   376                           
   377                           
   378                           ; 1 bytes @ 0x4
   379     0074                     	ds	1
   380     0075                     fputc@fp:
   381                           
   382                           ; 1 bytes @ 0x5
   383     0075                     	ds	1
   384     0076                     ??_vfpfcnvrt:
   385                           
   386                           ; 1 bytes @ 0x6
   387     0076                     	ds	2
   388     0078                     ??_vfprintf:
   389                           
   390                           	psect	cstackBANK0
   391     0020                     __pcstackBANK0:	
   392                           ; 1 bytes @ 0x8
   393                           
   394     0020                     ??_fputc:
   395     0020                     ?___lldiv:	
   396                           ; 1 bytes @ 0x0
   397                           
   398     0020                     ?___llmod:	
   399                           ; 4 bytes @ 0x0
   400                           
   401     0020                     ___lldiv@divisor:	
   402                           ; 4 bytes @ 0x0
   403                           
   404     0020                     ___llmod@divisor:	
   405                           ; 4 bytes @ 0x0
   406                           
   407                           
   408                           ; 4 bytes @ 0x0
   409     0020                     	ds	4
   410     0024                     ___lldiv@dividend:
   411     0024                     ___llmod@dividend:	
   412                           ; 4 bytes @ 0x4
   413                           
   414                           
   415                           ; 4 bytes @ 0x4
   416     0024                     	ds	4
   417     0028                     ___lldiv@quotient:
   418                           
   419                           ; 4 bytes @ 0x8
   420     0028                     	ds	4
   421     002C                     ___lldiv@counter:
   422                           
   423                           ; 1 bytes @ 0xC
   424     002C                     	ds	1
   425     002D                     ?_vfpfcnvrt:
   426     002D                     vfpfcnvrt@fmt:	
   427                           ; 1 bytes @ 0xD
   428                           
   429                           
   430                           ; 1 bytes @ 0xD
   431     002D                     	ds	1
   432     002E                     vfpfcnvrt@ap:
   433                           
   434                           ; 1 bytes @ 0xE
   435     002E                     	ds	1
   436     002F                     vfpfcnvrt@fp:
   437                           
   438                           ; 1 bytes @ 0xF
   439     002F                     	ds	1
   440     0030                     vfpfcnvrt@convarg:
   441                           
   442                           ; 4 bytes @ 0x10
   443     0030                     	ds	4
   444     0034                     vfpfcnvrt@cp:
   445                           
   446                           ; 1 bytes @ 0x14
   447     0034                     	ds	1
   448     0035                     vfpfcnvrt@c:
   449                           
   450                           ; 1 bytes @ 0x15
   451     0035                     	ds	1
   452     0036                     ?_vfprintf:
   453     0036                     vfprintf@fmt:	
   454                           ; 2 bytes @ 0x16
   455                           
   456                           
   457                           ; 1 bytes @ 0x16
   458     0036                     	ds	1
   459     0037                     vfprintf@ap:
   460                           
   461                           ; 1 bytes @ 0x17
   462     0037                     	ds	1
   463     0038                     vfprintf@fp:
   464                           
   465                           ; 1 bytes @ 0x18
   466     0038                     	ds	1
   467     0039                     vfprintf@cfmt:
   468                           
   469                           ; 1 bytes @ 0x19
   470     0039                     	ds	1
   471     003A                     ?_sprintf:
   472     003A                     sprintf@fmt:	
   473                           ; 2 bytes @ 0x1A
   474                           
   475                           
   476                           ; 1 bytes @ 0x1A
   477     003A                     	ds	5
   478     003F                     ??_sprintf:
   479                           
   480                           ; 1 bytes @ 0x1F
   481     003F                     	ds	1
   482     0040                     sprintf@s:
   483                           
   484                           ; 1 bytes @ 0x20
   485     0040                     	ds	1
   486     0041                     sprintf@ap:
   487                           
   488                           ; 1 bytes @ 0x21
   489     0041                     	ds	1
   490     0042                     sprintf@f:
   491                           
   492                           ; 11 bytes @ 0x22
   493     0042                     	ds	11
   494     004D                     ??_main:
   495                           
   496                           ; 1 bytes @ 0x2D
   497     004D                     	ds	3
   498                           
   499                           	psect	maintext
   500     01E2                     __pmaintext:	
   501 ;;
   502 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   503 ;;
   504 ;; *************** function _main *****************
   505 ;; Defined at:
   506 ;;		line 92 in file "newmain.c"
   507 ;; Parameters:    Size  Location     Type
   508 ;;		None
   509 ;; Auto vars:     Size  Location     Type
   510 ;;  buffer         32    0[BANK1 ] unsigned char [32]
   511 ;;  loop_counter    4   32[BANK1 ] unsigned long 
   512 ;; Return value:  Size  Location     Type
   513 ;;                  1    wreg      void 
   514 ;; Registers used:
   515 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   516 ;; Tracked objects:
   517 ;;		On entry : B00/0
   518 ;;		On exit  : 0/0
   519 ;;		Unchanged: 0/0
   520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   521 ;;      Params:         0       0       0       0       0
   522 ;;      Locals:         0       0      36       0       0
   523 ;;      Temps:          0       3       0       0       0
   524 ;;      Totals:         0       3      36       0       0
   525 ;;Total ram usage:       39 bytes
   526 ;; Hardware stack levels required when called: 6
   527 ;; This function calls:
   528 ;;		_UART_Init
   529 ;;		_UART_SendString
   530 ;;		_sprintf
   531 ;; This function is called by:
   532 ;;		Startup code after reset
   533 ;; This function uses a non-reentrant model
   534 ;;
   535                           
   536     01E2                     _main:	
   537                           ;psect for function _main
   538                           
   539     01E2                     l1340:	
   540                           ;incstack = 0
   541                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   542                           
   543                           
   544                           ;newmain.c: 94: 
   545     01E2  1683               	bsf	3,5	;RP0=1, select bank1
   546     01E3  1303               	bcf	3,6	;RP1=0, select bank1
   547     01E4  1006               	bcf	6,0	;volatile
   548                           
   549                           ;newmain.c: 95:     uint32_t loop_counter = 0;
   550     01E5  1086               	bcf	6,1	;volatile
   551                           
   552                           ;newmain.c: 96:     char buffer[32];
   553     01E6  1106               	bcf	6,2	;volatile
   554                           
   555                           ;newmain.c: 97: 
   556     01E7  1186               	bcf	6,3	;volatile
   557                           
   558                           ;newmain.c: 100:         loop_counter++;
   559     01E8  1283               	bcf	3,5	;RP0=0, select bank0
   560     01E9  1303               	bcf	3,6	;RP1=0, select bank0
   561     01EA  1006               	bcf	6,0	;volatile
   562                           
   563                           ;newmain.c: 101: 
   564     01EB  1086               	bcf	6,1	;volatile
   565                           
   566                           ;newmain.c: 102: 
   567     01EC  1106               	bcf	6,2	;volatile
   568                           
   569                           ;newmain.c: 103:         sprintf(buffer, "LOOP EXECUTE %lu\r\n", loop_counter);
   570     01ED  1186               	bcf	6,3	;volatile
   571     01EE                     l1342:
   572                           
   573                           ;newmain.c: 106:         UART_SendString(buffer);
   574     01EE  3003               	movlw	3
   575     01EF  0492               	iorwf	18,f	;volatile
   576     01F0                     l1344:
   577                           
   578                           ;newmain.c: 107: 
   579     01F0  307C               	movlw	124
   580     01F1  1683               	bsf	3,5	;RP0=1, select bank1
   581     01F2  1303               	bcf	3,6	;RP1=0, select bank1
   582     01F3  0092               	movwf	18	;volatile
   583     01F4                     l1346:
   584                           
   585                           ;newmain.c: 108: 
   586     01F4  1283               	bcf	3,5	;RP0=0, select bank0
   587     01F5  1303               	bcf	3,6	;RP1=0, select bank0
   588     01F6  0191               	clrf	17	;volatile
   589     01F7                     l1348:
   590                           
   591                           ;newmain.c: 109:         _delay((unsigned long)((1000)*(8000000/4000.0)));
   592     01F7  1512               	bsf	18,2	;volatile
   593     01F8                     l1350:
   594     01F8  1683               	bsf	3,5	;RP0=1, select bank1
   595     01F9  1303               	bcf	3,6	;RP1=0, select bank1
   596     01FA  148C               	bsf	12,1	;volatile
   597     01FB                     l1352:
   598     01FB  170B               	bsf	11,6	;volatile
   599     01FC                     l1354:
   600     01FC  178B               	bsf	11,7	;volatile
   601     01FD                     l1356:
   602     01FD  120A  118A  23DE  120A  118A  	fcall	_UART_Init
   603     0202                     l1358:
   604     0202  3000               	movlw	0
   605     0203  1683               	bsf	3,5	;RP0=1, select bank1
   606     0204  1303               	bcf	3,6	;RP1=0, select bank1
   607     0205  00ED               	movwf	(main@loop_counter+3)^(0+128)
   608     0206  3000               	movlw	0
   609     0207  00EC               	movwf	(main@loop_counter+2)^(0+128)
   610     0208  3000               	movlw	0
   611     0209  00EB               	movwf	(main@loop_counter+1)^(0+128)
   612     020A  3000               	movlw	0
   613     020B  00EA               	movwf	main@loop_counter^(0+128)
   614     020C                     l1360:
   615     020C  3001               	movlw	1
   616     020D  1683               	bsf	3,5	;RP0=1, select bank1
   617     020E  1303               	bcf	3,6	;RP1=0, select bank1
   618     020F  07EA               	addwf	main@loop_counter^(0+128),f
   619     0210  3000               	movlw	0
   620     0211  1803               	skipnc
   621     0212  3001               	movlw	1
   622     0213  07EB               	addwf	(main@loop_counter+1)^(0+128),f
   623     0214  3000               	movlw	0
   624     0215  1803               	skipnc
   625     0216  3001               	movlw	1
   626     0217  07EC               	addwf	(main@loop_counter+2)^(0+128),f
   627     0218  3000               	movlw	0
   628     0219  1803               	skipnc
   629     021A  3001               	movlw	1
   630     021B  07ED               	addwf	(main@loop_counter+3)^(0+128),f
   631     021C                     l1362:
   632     021C  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   633     021D  1283               	bcf	3,5	;RP0=0, select bank0
   634     021E  1303               	bcf	3,6	;RP1=0, select bank0
   635     021F  00BA               	movwf	sprintf@fmt
   636     0220  1683               	bsf	3,5	;RP0=1, select bank1
   637     0221  1303               	bcf	3,6	;RP1=0, select bank1
   638     0222  086D               	movf	(main@loop_counter+3)^(0+128),w
   639     0223  1283               	bcf	3,5	;RP0=0, select bank0
   640     0224  1303               	bcf	3,6	;RP1=0, select bank0
   641     0225  00BE               	movwf	?_sprintf+4
   642     0226  1683               	bsf	3,5	;RP0=1, select bank1
   643     0227  1303               	bcf	3,6	;RP1=0, select bank1
   644     0228  086C               	movf	(main@loop_counter+2)^(0+128),w
   645     0229  1283               	bcf	3,5	;RP0=0, select bank0
   646     022A  1303               	bcf	3,6	;RP1=0, select bank0
   647     022B  00BD               	movwf	?_sprintf+3
   648     022C  1683               	bsf	3,5	;RP0=1, select bank1
   649     022D  1303               	bcf	3,6	;RP1=0, select bank1
   650     022E  086B               	movf	(main@loop_counter+1)^(0+128),w
   651     022F  1283               	bcf	3,5	;RP0=0, select bank0
   652     0230  1303               	bcf	3,6	;RP1=0, select bank0
   653     0231  00BC               	movwf	?_sprintf+2
   654     0232  1683               	bsf	3,5	;RP0=1, select bank1
   655     0233  1303               	bcf	3,6	;RP1=0, select bank1
   656     0234  086A               	movf	main@loop_counter^(0+128),w
   657     0235  1283               	bcf	3,5	;RP0=0, select bank0
   658     0236  1303               	bcf	3,6	;RP1=0, select bank0
   659     0237  00BB               	movwf	?_sprintf+1
   660     0238  30CA               	movlw	(low (main@buffer| 0))& (0+255)
   661     0239  120A  118A  238F  120A  118A  	fcall	_sprintf
   662     023E                     l1364:
   663     023E  30CA               	movlw	(low (main@buffer| 0))& (0+255)
   664     023F  120A  118A  23C7  120A  118A  	fcall	_UART_SendString
   665     0244                     l1366:
   666     0244  300B               	movlw	11
   667     0245  1283               	bcf	3,5	;RP0=0, select bank0
   668     0246  1303               	bcf	3,6	;RP1=0, select bank0
   669     0247  00CF               	movwf	??_main+2
   670     0248  3026               	movlw	38
   671     0249  00CE               	movwf	??_main+1
   672     024A  305D               	movlw	93
   673     024B  00CD               	movwf	??_main
   674     024C                     u867:
   675     024C  0BCD               	decfsz	??_main,f
   676     024D  2A4C               	goto	u867
   677     024E  0BCE               	decfsz	??_main+1,f
   678     024F  2A4C               	goto	u867
   679     0250  0BCF               	decfsz	??_main+2,f
   680     0251  2A4C               	goto	u867
   681     0252  2A0C               	goto	l1360
   682     0253  120A  118A  280E   	ljmp	start
   683     0256                     __end_of_main:
   684                           
   685                           	psect	text1
   686     038F                     __ptext1:	
   687 ;; *************** function _sprintf *****************
   688 ;; Defined at:
   689 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
   690 ;; Parameters:    Size  Location     Type
   691 ;;  s               1    wreg     PTR unsigned char 
   692 ;;		 -> main@buffer(32), 
   693 ;;  fmt             1   26[BANK0 ] PTR const unsigned char 
   694 ;;		 -> STR_1(19), 
   695 ;; Auto vars:     Size  Location     Type
   696 ;;  s               1   32[BANK0 ] PTR unsigned char 
   697 ;;		 -> main@buffer(32), 
   698 ;;  f              11   34[BANK0 ] struct _IO_FILE
   699 ;;  ret             2    0        int 
   700 ;;  ap              1   33[BANK0 ] PTR void [1]
   701 ;;		 -> ?_sprintf(2), 
   702 ;; Return value:  Size  Location     Type
   703 ;;                  2   26[BANK0 ] int 
   704 ;; Registers used:
   705 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   706 ;; Tracked objects:
   707 ;;		On entry : 0/0
   708 ;;		On exit  : 0/0
   709 ;;		Unchanged: 0/0
   710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   711 ;;      Params:         0       5       0       0       0
   712 ;;      Locals:         0      13       0       0       0
   713 ;;      Temps:          0       1       0       0       0
   714 ;;      Totals:         0      19       0       0       0
   715 ;;Total ram usage:       19 bytes
   716 ;; Hardware stack levels used: 1
   717 ;; Hardware stack levels required when called: 5
   718 ;; This function calls:
   719 ;;		_vfprintf
   720 ;; This function is called by:
   721 ;;		_main
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           
   725     038F                     _sprintf:	
   726                           ;psect for function _sprintf
   727                           
   728                           
   729                           ;incstack = 0
   730                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   731                           ;sprintf@s stored from wreg
   732     038F  1283               	bcf	3,5	;RP0=0, select bank0
   733     0390  1303               	bcf	3,6	;RP1=0, select bank0
   734     0391  00C0               	movwf	sprintf@s
   735     0392                     l1328:
   736     0392  303B               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   737     0393  00C1               	movwf	sprintf@ap
   738     0394  0840               	movf	sprintf@s,w
   739     0395  00C2               	movwf	sprintf@f
   740     0396                     l1330:
   741     0396  01C4               	clrf	sprintf@f+2
   742     0397  01C5               	clrf	sprintf@f+3
   743     0398                     l1332:
   744     0398  01CB               	clrf	sprintf@f+9
   745     0399  01CC               	clrf	sprintf@f+10
   746     039A                     l1334:
   747     039A  083A               	movf	sprintf@fmt,w
   748     039B  00B6               	movwf	vfprintf@fmt
   749     039C  3041               	movlw	(low (sprintf@ap| 0))& (0+255)
   750     039D  00B7               	movwf	vfprintf@ap
   751     039E  3042               	movlw	(low (sprintf@f| 0))& (0+255)
   752     039F  120A  118A  236E  120A  118A  	fcall	_vfprintf
   753     03A4                     l1336:
   754     03A4  1283               	bcf	3,5	;RP0=0, select bank0
   755     03A5  1303               	bcf	3,6	;RP1=0, select bank0
   756     03A6  0844               	movf	sprintf@f+2,w
   757     03A7  0740               	addwf	sprintf@s,w
   758     03A8  00BF               	movwf	??_sprintf
   759     03A9  083F               	movf	??_sprintf,w
   760     03AA  0084               	movwf	4
   761     03AB  1383               	bcf	3,7	;select IRP bank0
   762     03AC  0180               	clrf	0
   763     03AD                     l626:
   764     03AD  0008               	return
   765     03AE                     __end_of_sprintf:
   766                           
   767                           	psect	text2
   768     036E                     __ptext2:	
   769 ;; *************** function _vfprintf *****************
   770 ;; Defined at:
   771 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;  fp              1    wreg     PTR struct _IO_FILE
   774 ;;		 -> sprintf@f(11), 
   775 ;;  fmt             1   22[BANK0 ] PTR const unsigned char 
   776 ;;		 -> STR_1(19), 
   777 ;;  ap              1   23[BANK0 ] PTR PTR void 
   778 ;;		 -> sprintf@ap(1), 
   779 ;; Auto vars:     Size  Location     Type
   780 ;;  fp              1   24[BANK0 ] PTR struct _IO_FILE
   781 ;;		 -> sprintf@f(11), 
   782 ;;  cfmt            1   25[BANK0 ] PTR unsigned char 
   783 ;;		 -> STR_1(19), 
   784 ;; Return value:  Size  Location     Type
   785 ;;                  2   22[BANK0 ] int 
   786 ;; Registers used:
   787 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   788 ;; Tracked objects:
   789 ;;		On entry : 0/0
   790 ;;		On exit  : 0/0
   791 ;;		Unchanged: 0/0
   792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   793 ;;      Params:         0       2       0       0       0
   794 ;;      Locals:         0       2       0       0       0
   795 ;;      Temps:          0       0       0       0       0
   796 ;;      Totals:         0       4       0       0       0
   797 ;;Total ram usage:        4 bytes
   798 ;; Hardware stack levels used: 1
   799 ;; Hardware stack levels required when called: 4
   800 ;; This function calls:
   801 ;;		_vfpfcnvrt
   802 ;; This function is called by:
   803 ;;		_sprintf
   804 ;; This function uses a non-reentrant model
   805 ;;
   806                           
   807     036E                     _vfprintf:	
   808                           ;psect for function _vfprintf
   809                           
   810                           
   811                           ;incstack = 0
   812                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   813                           ;vfprintf@fp stored from wreg
   814     036E  1283               	bcf	3,5	;RP0=0, select bank0
   815     036F  1303               	bcf	3,6	;RP1=0, select bank0
   816     0370  00B8               	movwf	vfprintf@fp
   817     0371                     l1302:
   818                           
   819                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
   820     0371  0836               	movf	vfprintf@fmt,w
   821     0372  00B9               	movwf	vfprintf@cfmt
   822                           
   823                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
   824     0373  2B7E               	goto	l1306
   825     0374                     l1304:
   826                           
   827                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
   828     0374  3039               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
   829     0375  00AD               	movwf	vfpfcnvrt@fmt
   830     0376  0837               	movf	vfprintf@ap,w
   831     0377  00AE               	movwf	vfpfcnvrt@ap
   832     0378  0838               	movf	vfprintf@fp,w
   833     0379  120A  118A  2024  120A  118A  	fcall	_vfpfcnvrt
   834     037E                     l1306:
   835                           
   836                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
   837     037E  1283               	bcf	3,5	;RP0=0, select bank0
   838     037F  1303               	bcf	3,6	;RP1=0, select bank0
   839     0380  0839               	movf	vfprintf@cfmt,w
   840     0381  0084               	movwf	4
   841     0382  120A  118A  23AE  120A  118A  	fcall	stringdir
   842     0387  3A00               	xorlw	0
   843     0388  1D03               	skipz
   844     0389  2B8B               	goto	u841
   845     038A  2B8C               	goto	u840
   846     038B                     u841:
   847     038B  2B74               	goto	l1304
   848     038C                     u840:
   849     038C                     l1308:
   850                           
   851                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
   852     038C  01B6               	clrf	?_vfprintf
   853     038D  01B7               	clrf	?_vfprintf+1
   854     038E                     l679:
   855     038E  0008               	return
   856     038F                     __end_of_vfprintf:
   857                           
   858                           	psect	text3
   859     0024                     __ptext3:	
   860 ;; *************** function _vfpfcnvrt *****************
   861 ;; Defined at:
   862 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;  fp              1    wreg     PTR struct _IO_FILE
   865 ;;		 -> sprintf@f(11), 
   866 ;;  fmt             1   13[BANK0 ] PTR PTR unsigned char 
   867 ;;		 -> vfprintf@cfmt(1), 
   868 ;;  ap              1   14[BANK0 ] PTR PTR void 
   869 ;;		 -> sprintf@ap(1), 
   870 ;; Auto vars:     Size  Location     Type
   871 ;;  fp              1   15[BANK0 ] PTR struct _IO_FILE
   872 ;;		 -> sprintf@f(11), 
   873 ;;  convarg         4   16[BANK0 ] struct .
   874 ;;  c               1   21[BANK0 ] unsigned char 
   875 ;;  cp              1   20[BANK0 ] PTR unsigned char 
   876 ;;		 -> STR_1(19), 
   877 ;;  done            1    0        _Bool 
   878 ;; Return value:  Size  Location     Type
   879 ;;                  1    wreg      void 
   880 ;; Registers used:
   881 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   882 ;; Tracked objects:
   883 ;;		On entry : 0/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   887 ;;      Params:         0       2       0       0       0
   888 ;;      Locals:         0       7       0       0       0
   889 ;;      Temps:          2       0       0       0       0
   890 ;;      Totals:         2       9       0       0       0
   891 ;;Total ram usage:       11 bytes
   892 ;; Hardware stack levels used: 1
   893 ;; Hardware stack levels required when called: 3
   894 ;; This function calls:
   895 ;;		___lldiv
   896 ;;		___llmod
   897 ;;		_fputc
   898 ;; This function is called by:
   899 ;;		_vfprintf
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903     0024                     _vfpfcnvrt:	
   904                           ;psect for function _vfpfcnvrt
   905                           
   906                           
   907                           ;incstack = 0
   908                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   909                           ;vfpfcnvrt@fp stored from wreg
   910     0024  1283               	bcf	3,5	;RP0=0, select bank0
   911     0025  1303               	bcf	3,6	;RP1=0, select bank0
   912     0026  00AF               	movwf	vfpfcnvrt@fp
   913     0027                     l1234:
   914                           
   915                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
   916     0027  082D               	movf	vfpfcnvrt@fmt,w
   917     0028  0084               	movwf	4
   918     0029  1383               	bcf	3,7	;select IRP bank0
   919     002A  0800               	movf	0,w
   920     002B  0084               	movwf	4
   921     002C  120A  118A  23AE  120A  118A  	fcall	stringdir
   922     0031  3A25               	xorlw	37
   923     0032  1D03               	skipz
   924     0033  2835               	goto	u781
   925     0034  2836               	goto	u780
   926     0035                     u781:
   927     0035  2934               	goto	l1292
   928     0036                     u780:
   929     0036                     l1236:
   930                           
   931                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
   932     0036  3001               	movlw	1
   933     0037  00FF               	movwf	btemp+1
   934     0038  082D               	movf	vfpfcnvrt@fmt,w
   935     0039  0084               	movwf	4
   936     003A  087F               	movf	btemp+1,w
   937     003B  0780               	addwf	0,f
   938     003C                     l1238:
   939                           
   940                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
   941     003C  1683               	bsf	3,5	;RP0=1, select bank1
   942     003D  1303               	bcf	3,6	;RP1=0, select bank1
   943     003E  01C0               	clrf	_width^(0+128)
   944     003F  01C1               	clrf	(_width+1)^(0+128)
   945     0040  1003               	clrc
   946     0041  3000               	movlw	0
   947     0042  1803               	btfsc	3,0
   948     0043  3001               	movlw	1
   949     0044  1283               	bcf	3,5	;RP0=0, select bank0
   950     0045  1303               	bcf	3,6	;RP1=0, select bank0
   951     0046  00D0               	movwf	_flags
   952     0047                     l1240:
   953                           
   954                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
   955     0047  30FF               	movlw	255
   956     0048  1683               	bsf	3,5	;RP0=1, select bank1
   957     0049  1303               	bcf	3,6	;RP1=0, select bank1
   958     004A  00C2               	movwf	_prec^(0+128)
   959     004B  30FF               	movlw	255
   960     004C  00C3               	movwf	(_prec^(0+128)+1)
   961     004D                     l1242:
   962                           
   963                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
   964     004D  1283               	bcf	3,5	;RP0=0, select bank0
   965     004E  1303               	bcf	3,6	;RP1=0, select bank0
   966     004F  082D               	movf	vfpfcnvrt@fmt,w
   967     0050  0084               	movwf	4
   968     0051  0800               	movf	0,w
   969     0052  00B4               	movwf	vfpfcnvrt@cp
   970     0053                     l1244:
   971                           
   972                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
   973     0053  0834               	movf	vfpfcnvrt@cp,w
   974     0054  0084               	movwf	4
   975     0055  120A  118A  23AE  120A  118A  	fcall	stringdir
   976     005A  00B5               	movwf	vfpfcnvrt@c
   977                           
   978                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1294:   switch(c)
      +                           {
   979     005B  2866               	goto	l1254
   980     005C                     l1246:
   981                           
   982                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1309:     cp++;
   983     005C  3001               	movlw	1
   984     005D  00FF               	movwf	btemp+1
   985     005E  087F               	movf	btemp+1,w
   986     005F  07B4               	addwf	vfpfcnvrt@cp,f
   987                           
   988                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1316:     break;
   989     0060  286E               	goto	l1256
   990     0061                     l1248:
   991                           
   992                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1350:     c = 'i'
      +                          ;
   993     0061  3069               	movlw	105
   994     0062  00B5               	movwf	vfpfcnvrt@c
   995                           
   996                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1351:     break;
   997     0063  286E               	goto	l1256
   998     0064                     l1250:
   999                           
  1000                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
  1001     0064  01B5               	clrf	vfpfcnvrt@c
  1002                           
  1003                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1354:     break;
  1004     0065  286E               	goto	l1256
  1005     0066                     l1254:
  1006     0066  0835               	movf	vfpfcnvrt@c,w
  1007                           
  1008                           ; Switch size 1, requested type "simple"
  1009                           ; Number of cases is 2, Range of values is 108 to 117
  1010                           ; switch strategies available:
  1011                           ; Name         Instructions Cycles
  1012                           ; simple_byte            7     4 (average)
  1013                           ; direct_byte           41    11 (fixed)
  1014                           ; jumptable            263     9 (fixed)
  1015                           ;	Chosen strategy is simple_byte
  1016     0067  3A6C               	xorlw	108	; case 108
  1017     0068  1903               	skipnz
  1018     0069  285C               	goto	l1246
  1019     006A  3A19               	xorlw	25	; case 117
  1020     006B  1903               	skipnz
  1021     006C  2861               	goto	l1248
  1022     006D  2864               	goto	l1250
  1023     006E                     l1256:
  1024     006E  0834               	movf	vfpfcnvrt@cp,w
  1025     006F  0084               	movwf	4
  1026     0070  120A  118A  23AE  120A  118A  	fcall	stringdir
  1027     0075  3A75               	xorlw	117
  1028     0076  1D03               	skipz
  1029     0077  2879               	goto	u791
  1030     0078  287A               	goto	u790
  1031     0079                     u791:
  1032     0079  292A               	goto	l1288
  1033     007A                     u790:
  1034     007A  28A3               	goto	l1264
  1035     007B                     l1258:
  1036                           
  1037                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1456:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  1038     007B  082E               	movf	vfpfcnvrt@ap,w
  1039     007C  0084               	movwf	4
  1040     007D  0800               	movf	0,w
  1041     007E  00FF               	movwf	btemp+1
  1042     007F  3002               	movlw	2
  1043     0080  0780               	addwf	0,f
  1044     0081  087F               	movf	btemp+1,w
  1045     0082  0084               	movwf	4
  1046     0083  0800               	movf	0,w
  1047     0084  00F6               	movwf	??_vfpfcnvrt
  1048     0085  0A84               	incf	4,f
  1049     0086  0800               	movf	0,w
  1050     0087  00F7               	movwf	??_vfpfcnvrt+1
  1051     0088  0876               	movf	??_vfpfcnvrt,w
  1052     0089  00B0               	movwf	vfpfcnvrt@convarg
  1053     008A  0877               	movf	??_vfpfcnvrt+1,w
  1054     008B  00B1               	movwf	vfpfcnvrt@convarg+1
  1055     008C  01B2               	clrf	vfpfcnvrt@convarg+2
  1056     008D  01B3               	clrf	vfpfcnvrt@convarg+3
  1057                           
  1058                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1457:      break;
  1059     008E  28AB               	goto	l1266
  1060     008F                     l1260:
  1061                           
  1062                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1470:      convar
      +                          g.uint = (vfpf_uint_t)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)
      +                          0));
  1063     008F  082E               	movf	vfpfcnvrt@ap,w
  1064     0090  0084               	movwf	4
  1065     0091  0800               	movf	0,w
  1066     0092  00FF               	movwf	btemp+1
  1067     0093  3004               	movlw	4
  1068     0094  0780               	addwf	0,f
  1069     0095  087F               	movf	btemp+1,w
  1070     0096  0084               	movwf	4
  1071     0097  0800               	movf	0,w
  1072     0098  00B0               	movwf	vfpfcnvrt@convarg
  1073     0099  0A84               	incf	4,f
  1074     009A  0800               	movf	0,w
  1075     009B  00B1               	movwf	vfpfcnvrt@convarg+1
  1076     009C  0A84               	incf	4,f
  1077     009D  0800               	movf	0,w
  1078     009E  00B2               	movwf	vfpfcnvrt@convarg+2
  1079     009F  0A84               	incf	4,f
  1080     00A0  0800               	movf	0,w
  1081     00A1  00B3               	movwf	vfpfcnvrt@convarg+3
  1082                           
  1083                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1471:      break;
  1084     00A2  28AB               	goto	l1266
  1085     00A3                     l1264:
  1086     00A3  0835               	movf	vfpfcnvrt@c,w
  1087                           
  1088                           ; Switch size 1, requested type "simple"
  1089                           ; Number of cases is 2, Range of values is 105 to 108
  1090                           ; switch strategies available:
  1091                           ; Name         Instructions Cycles
  1092                           ; simple_byte            7     4 (average)
  1093                           ; direct_byte           23    11 (fixed)
  1094                           ; jumptable            263     9 (fixed)
  1095                           ;	Chosen strategy is simple_byte
  1096     00A4  3A69               	xorlw	105	; case 105
  1097     00A5  1903               	skipnz
  1098     00A6  287B               	goto	l1258
  1099     00A7  3A05               	xorlw	5	; case 108
  1100     00A8  1903               	skipnz
  1101     00A9  288F               	goto	l1260
  1102     00AA  28AB               	goto	l1266
  1103     00AB                     l1266:
  1104                           
  1105                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  1106     00AB  082D               	movf	vfpfcnvrt@fmt,w
  1107     00AC  0084               	movwf	4
  1108     00AD  0834               	movf	vfpfcnvrt@cp,w
  1109     00AE  3E01               	addlw	1
  1110     00AF  0080               	movwf	0
  1111                           
  1112                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  1113     00B0  291F               	goto	l1286
  1114     00B1                     l1268:
  1115                           
  1116                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1525:      c = si
      +                          zeof(dbuf);
  1117     00B1  3020               	movlw	32
  1118     00B2  00B5               	movwf	vfpfcnvrt@c
  1119     00B3                     l1270:
  1120                           
  1121                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1527:       dbuf[
      +                          --c] = (convarg.uint % 10) + '0';
  1122     00B3  3001               	movlw	1
  1123     00B4  02B5               	subwf	vfpfcnvrt@c,f
  1124     00B5  0835               	movf	vfpfcnvrt@c,w
  1125     00B6  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  1126     00B7  0084               	movwf	4
  1127     00B8  3000               	movlw	0
  1128     00B9  00A3               	movwf	___llmod@divisor+3
  1129     00BA  3000               	movlw	0
  1130     00BB  00A2               	movwf	___llmod@divisor+2
  1131     00BC  3000               	movlw	0
  1132     00BD  00A1               	movwf	___llmod@divisor+1
  1133     00BE  300A               	movlw	10
  1134     00BF  00A0               	movwf	___llmod@divisor
  1135     00C0  0833               	movf	vfpfcnvrt@convarg+3,w
  1136     00C1  00A7               	movwf	___llmod@dividend+3
  1137     00C2  0832               	movf	vfpfcnvrt@convarg+2,w
  1138     00C3  00A6               	movwf	___llmod@dividend+2
  1139     00C4  0831               	movf	vfpfcnvrt@convarg+1,w
  1140     00C5  00A5               	movwf	___llmod@dividend+1
  1141     00C6  0830               	movf	vfpfcnvrt@convarg,w
  1142     00C7  00A4               	movwf	___llmod@dividend
  1143     00C8  120A  118A  2318  120A  118A  	fcall	___llmod
  1144     00CD  1283               	bcf	3,5	;RP0=0, select bank0
  1145     00CE  1303               	bcf	3,6	;RP1=0, select bank0
  1146     00CF  0820               	movf	?___llmod,w
  1147     00D0  3E30               	addlw	48
  1148     00D1  1383               	bcf	3,7	;select IRP bank1
  1149     00D2  0080               	movwf	0
  1150     00D3                     l1272:
  1151                           
  1152                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1528:       conva
      +                          rg.uint /= 10;
  1153     00D3  3000               	movlw	0
  1154     00D4  00A3               	movwf	___lldiv@divisor+3
  1155     00D5  3000               	movlw	0
  1156     00D6  00A2               	movwf	___lldiv@divisor+2
  1157     00D7  3000               	movlw	0
  1158     00D8  00A1               	movwf	___lldiv@divisor+1
  1159     00D9  300A               	movlw	10
  1160     00DA  00A0               	movwf	___lldiv@divisor
  1161     00DB  0833               	movf	vfpfcnvrt@convarg+3,w
  1162     00DC  00A7               	movwf	___lldiv@dividend+3
  1163     00DD  0832               	movf	vfpfcnvrt@convarg+2,w
  1164     00DE  00A6               	movwf	___lldiv@dividend+2
  1165     00DF  0831               	movf	vfpfcnvrt@convarg+1,w
  1166     00E0  00A5               	movwf	___lldiv@dividend+1
  1167     00E1  0830               	movf	vfpfcnvrt@convarg,w
  1168     00E2  00A4               	movwf	___lldiv@dividend
  1169     00E3  120A  118A  2256  120A  118A  	fcall	___lldiv
  1170     00E8  1283               	bcf	3,5	;RP0=0, select bank0
  1171     00E9  1303               	bcf	3,6	;RP1=0, select bank0
  1172     00EA  0823               	movf	?___lldiv+3,w
  1173     00EB  00B3               	movwf	vfpfcnvrt@convarg+3
  1174     00EC  0822               	movf	?___lldiv+2,w
  1175     00ED  00B2               	movwf	vfpfcnvrt@convarg+2
  1176     00EE  0821               	movf	?___lldiv+1,w
  1177     00EF  00B1               	movwf	vfpfcnvrt@convarg+1
  1178     00F0  0820               	movf	?___lldiv,w
  1179     00F1  00B0               	movwf	vfpfcnvrt@convarg
  1180     00F2                     l1274:
  1181                           
  1182                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1532:      } whil
      +                          e (convarg.uint != 0 && c != 0);
  1183     00F2  0833               	movf	vfpfcnvrt@convarg+3,w
  1184     00F3  0432               	iorwf	vfpfcnvrt@convarg+2,w
  1185     00F4  0431               	iorwf	vfpfcnvrt@convarg+1,w
  1186     00F5  0430               	iorwf	vfpfcnvrt@convarg,w
  1187     00F6  1903               	skipnz
  1188     00F7  28F9               	goto	u801
  1189     00F8  28FA               	goto	u800
  1190     00F9                     u801:
  1191     00F9  2918               	goto	l1282
  1192     00FA                     u800:
  1193     00FA                     l1276:
  1194     00FA  0835               	movf	vfpfcnvrt@c,w
  1195     00FB  1D03               	btfss	3,2
  1196     00FC  28FE               	goto	u811
  1197     00FD  28FF               	goto	u810
  1198     00FE                     u811:
  1199     00FE  28B3               	goto	l1270
  1200     00FF                     u810:
  1201     00FF  2918               	goto	l1282
  1202     0100                     l1278:
  1203                           
  1204                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1534:       fputc
      +                          (dbuf[c++], fp);
  1205     0100  0835               	movf	vfpfcnvrt@c,w
  1206     0101  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  1207     0102  0084               	movwf	4
  1208     0103  1383               	bcf	3,7	;select IRP bank1
  1209     0104  0800               	movf	0,w
  1210     0105  00F6               	movwf	??_vfpfcnvrt
  1211     0106  01F7               	clrf	??_vfpfcnvrt+1
  1212     0107  0876               	movf	??_vfpfcnvrt,w
  1213     0108  00F3               	movwf	fputc@c
  1214     0109  0877               	movf	??_vfpfcnvrt+1,w
  1215     010A  00F4               	movwf	fputc@c+1
  1216     010B  082F               	movf	vfpfcnvrt@fp,w
  1217     010C  00F5               	movwf	fputc@fp
  1218     010D  120A  118A  22BE  120A  118A  	fcall	_fputc
  1219     0112                     l1280:
  1220     0112  3001               	movlw	1
  1221     0113  00FF               	movwf	btemp+1
  1222     0114  087F               	movf	btemp+1,w
  1223     0115  1283               	bcf	3,5	;RP0=0, select bank0
  1224     0116  1303               	bcf	3,6	;RP1=0, select bank0
  1225     0117  07B5               	addwf	vfpfcnvrt@c,f
  1226     0118                     l1282:
  1227                           
  1228                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1533:      while 
      +                          (c != sizeof(dbuf)) {
  1229     0118  3020               	movlw	32
  1230     0119  0635               	xorwf	vfpfcnvrt@c,w
  1231     011A  1D03               	btfss	3,2
  1232     011B  291D               	goto	u821
  1233     011C  291E               	goto	u820
  1234     011D                     u821:
  1235     011D  2900               	goto	l1278
  1236     011E                     u820:
  1237     011E  294B               	goto	l672
  1238     011F                     l1286:
  1239     011F  0834               	movf	vfpfcnvrt@cp,w
  1240     0120  0084               	movwf	4
  1241     0121  120A  118A  23AE  120A  118A  	fcall	stringdir
  1242                           
  1243                           ; Switch size 1, requested type "simple"
  1244                           ; Number of cases is 1, Range of values is 117 to 117
  1245                           ; switch strategies available:
  1246                           ; Name         Instructions Cycles
  1247                           ; simple_byte            4     3 (average)
  1248                           ; direct_byte           14    11 (fixed)
  1249                           ; jumptable            263     9 (fixed)
  1250                           ;	Chosen strategy is simple_byte
  1251     0126  3A75               	xorlw	117	; case 117
  1252     0127  1903               	skipnz
  1253     0128  28B1               	goto	l1268
  1254     0129  292A               	goto	l1288
  1255     012A                     l1288:
  1256                           
  1257                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1258     012A  3001               	movlw	1
  1259     012B  00FF               	movwf	btemp+1
  1260     012C  1283               	bcf	3,5	;RP0=0, select bank0
  1261     012D  1303               	bcf	3,6	;RP1=0, select bank0
  1262     012E  082D               	movf	vfpfcnvrt@fmt,w
  1263     012F  0084               	movwf	4
  1264     0130  087F               	movf	btemp+1,w
  1265     0131  1383               	bcf	3,7	;select IRP bank0
  1266     0132  0780               	addwf	0,f
  1267     0133  294B               	goto	l672
  1268     0134                     l1292:
  1269                           
  1270                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1271     0134  082D               	movf	vfpfcnvrt@fmt,w
  1272     0135  0084               	movwf	4
  1273     0136  0800               	movf	0,w
  1274     0137  0084               	movwf	4
  1275     0138  120A  118A  23AE  120A  118A  	fcall	stringdir
  1276     013D  00F6               	movwf	??_vfpfcnvrt
  1277     013E  01F7               	clrf	??_vfpfcnvrt+1
  1278     013F  0876               	movf	??_vfpfcnvrt,w
  1279     0140  00F3               	movwf	fputc@c
  1280     0141  0877               	movf	??_vfpfcnvrt+1,w
  1281     0142  00F4               	movwf	fputc@c+1
  1282     0143  082F               	movf	vfpfcnvrt@fp,w
  1283     0144  00F5               	movwf	fputc@fp
  1284     0145  120A  118A  22BE  120A  118A  	fcall	_fputc
  1285     014A  292A               	goto	l1288
  1286     014B                     l672:
  1287     014B  0008               	return
  1288     014C                     __end_of_vfpfcnvrt:
  1289                           
  1290                           	psect	text4
  1291     02BE                     __ptext4:	
  1292 ;; *************** function _fputc *****************
  1293 ;; Defined at:
  1294 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  1295 ;; Parameters:    Size  Location     Type
  1296 ;;  c               2    3[COMMON] int 
  1297 ;;  fp              1    5[COMMON] PTR struct _IO_FILE
  1298 ;;		 -> sprintf@f(11), 
  1299 ;; Auto vars:     Size  Location     Type
  1300 ;;		None
  1301 ;; Return value:  Size  Location     Type
  1302 ;;                  2    3[COMMON] int 
  1303 ;; Registers used:
  1304 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1305 ;; Tracked objects:
  1306 ;;		On entry : 0/0
  1307 ;;		On exit  : 0/0
  1308 ;;		Unchanged: 0/0
  1309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1310 ;;      Params:         3       0       0       0       0
  1311 ;;      Locals:         0       0       0       0       0
  1312 ;;      Temps:          0       5       0       0       0
  1313 ;;      Totals:         3       5       0       0       0
  1314 ;;Total ram usage:        8 bytes
  1315 ;; Hardware stack levels used: 1
  1316 ;; Hardware stack levels required when called: 2
  1317 ;; This function calls:
  1318 ;;		_putch
  1319 ;; This function is called by:
  1320 ;;		_vfpfcnvrt
  1321 ;; This function uses a non-reentrant model
  1322 ;;
  1323                           
  1324     02BE                     _fputc:	
  1325                           ;psect for function _fputc
  1326                           
  1327     02BE                     l1220:	
  1328                           ;incstack = 0
  1329                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1330                           
  1331     02BE  0875               	movf	fputc@fp,w
  1332     02BF  1903               	btfsc	3,2
  1333     02C0  2AC2               	goto	u741
  1334     02C1  2AC3               	goto	u740
  1335     02C2                     u741:
  1336     02C2  2AC8               	goto	l1224
  1337     02C3                     u740:
  1338     02C3                     l1222:
  1339     02C3  0875               	movf	fputc@fp,w
  1340     02C4  1D03               	btfss	3,2
  1341     02C5  2AC7               	goto	u751
  1342     02C6  2AC8               	goto	u750
  1343     02C7                     u751:
  1344     02C7  2ACF               	goto	l1226
  1345     02C8                     u750:
  1346     02C8                     l1224:
  1347     02C8  0873               	movf	fputc@c,w
  1348     02C9  120A  118A  23FF  120A  118A  	fcall	_putch
  1349     02CE  2B17               	goto	l691
  1350     02CF                     l1226:
  1351     02CF  0875               	movf	fputc@fp,w
  1352     02D0  3E09               	addlw	9
  1353     02D1  0084               	movwf	4
  1354     02D2  1383               	bcf	3,7	;select IRP bank0
  1355     02D3  0800               	movf	0,w
  1356     02D4  1283               	bcf	3,5	;RP0=0, select bank0
  1357     02D5  1303               	bcf	3,6	;RP1=0, select bank0
  1358     02D6  00A0               	movwf	??_fputc
  1359     02D7  0A84               	incf	4,f
  1360     02D8  0800               	movf	0,w
  1361     02D9  00A1               	movwf	??_fputc+1
  1362     02DA  0820               	movf	??_fputc,w
  1363     02DB  0421               	iorwf	??_fputc+1,w
  1364     02DC  1903               	btfsc	3,2
  1365     02DD  2ADF               	goto	u761
  1366     02DE  2AE0               	goto	u760
  1367     02DF                     u761:
  1368     02DF  2AFE               	goto	l1230
  1369     02E0                     u760:
  1370     02E0                     l1228:
  1371     02E0  0875               	movf	fputc@fp,w
  1372     02E1  3E09               	addlw	9
  1373     02E2  0084               	movwf	4
  1374     02E3  0800               	movf	0,w
  1375     02E4  00A0               	movwf	??_fputc
  1376     02E5  0A84               	incf	4,f
  1377     02E6  0800               	movf	0,w
  1378     02E7  00A1               	movwf	??_fputc+1
  1379     02E8  0875               	movf	fputc@fp,w
  1380     02E9  3E02               	addlw	2
  1381     02EA  0084               	movwf	4
  1382     02EB  0800               	movf	0,w
  1383     02EC  00A2               	movwf	??_fputc+2
  1384     02ED  0A84               	incf	4,f
  1385     02EE  0800               	movf	0,w
  1386     02EF  00A3               	movwf	??_fputc+3
  1387     02F0  0823               	movf	??_fputc+3,w
  1388     02F1  3A80               	xorlw	128
  1389     02F2  00A4               	movwf	??_fputc+4
  1390     02F3  0821               	movf	??_fputc+1,w
  1391     02F4  3A80               	xorlw	128
  1392     02F5  0224               	subwf	??_fputc+4,w
  1393     02F6  1D03               	skipz
  1394     02F7  2AFA               	goto	u775
  1395     02F8  0820               	movf	??_fputc,w
  1396     02F9  0222               	subwf	??_fputc+2,w
  1397     02FA                     u775:
  1398     02FA  1803               	skipnc
  1399     02FB  2AFD               	goto	u771
  1400     02FC  2AFE               	goto	u770
  1401     02FD                     u771:
  1402     02FD  2B17               	goto	l691
  1403     02FE                     u770:
  1404     02FE                     l1230:
  1405     02FE  0875               	movf	fputc@fp,w
  1406     02FF  3E02               	addlw	2
  1407     0300  0084               	movwf	4
  1408     0301  1383               	bcf	3,7	;select IRP bank0
  1409     0302  0800               	movf	0,w
  1410     0303  1283               	bcf	3,5	;RP0=0, select bank0
  1411     0304  1303               	bcf	3,6	;RP1=0, select bank0
  1412     0305  00A0               	movwf	??_fputc
  1413     0306  0875               	movf	fputc@fp,w
  1414     0307  0084               	movwf	4
  1415     0308  0800               	movf	0,w
  1416     0309  0720               	addwf	??_fputc,w
  1417     030A  00A1               	movwf	??_fputc+1
  1418     030B  0821               	movf	??_fputc+1,w
  1419     030C  0084               	movwf	4
  1420     030D  0873               	movf	fputc@c,w
  1421     030E  0080               	movwf	0
  1422     030F  0875               	movf	fputc@fp,w
  1423     0310  3E02               	addlw	2
  1424     0311  0084               	movwf	4
  1425     0312  3001               	movlw	1
  1426     0313  0780               	addwf	0,f
  1427     0314  0A84               	incf	4,f
  1428     0315  1803               	skipnc
  1429     0316  0A80               	incf	0,f
  1430     0317                     l691:
  1431     0317  0008               	return
  1432     0318                     __end_of_fputc:
  1433                           
  1434                           	psect	text5
  1435     03FF                     __ptext5:	
  1436 ;; *************** function _putch *****************
  1437 ;; Defined at:
  1438 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;  c               1    wreg     unsigned char 
  1441 ;; Auto vars:     Size  Location     Type
  1442 ;;  c               1    0[COMMON] unsigned char 
  1443 ;; Return value:  Size  Location     Type
  1444 ;;                  1    wreg      void 
  1445 ;; Registers used:
  1446 ;;		wreg
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1452 ;;      Params:         0       0       0       0       0
  1453 ;;      Locals:         0       0       0       0       0
  1454 ;;      Temps:          0       0       0       0       0
  1455 ;;      Totals:         0       0       0       0       0
  1456 ;;Total ram usage:        0 bytes
  1457 ;; Hardware stack levels used: 1
  1458 ;; Hardware stack levels required when called: 1
  1459 ;; This function calls:
  1460 ;;		Nothing
  1461 ;; This function is called by:
  1462 ;;		_fputc
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           
  1466     03FF                     _putch:	
  1467                           ;psect for function _putch
  1468                           
  1469     03FF                     l702:	
  1470                           ;incstack = 0
  1471                           ; Regs used in _putch: [wreg]
  1472                           
  1473     03FF  0008               	return
  1474     0400                     __end_of_putch:
  1475                           
  1476                           	psect	text6
  1477     0318                     __ptext6:	
  1478 ;; *************** function ___llmod *****************
  1479 ;; Defined at:
  1480 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\llmod.c"
  1481 ;; Parameters:    Size  Location     Type
  1482 ;;  divisor         4    0[BANK0 ] unsigned long 
  1483 ;;  dividend        4    4[BANK0 ] unsigned long 
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;  counter         1    4[COMMON] unsigned char 
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  4    0[BANK0 ] unsigned long 
  1488 ;; Registers used:
  1489 ;;		wreg, status,2, status,0, btemp+1
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1495 ;;      Params:         0       8       0       0       0
  1496 ;;      Locals:         1       0       0       0       0
  1497 ;;      Temps:          1       0       0       0       0
  1498 ;;      Totals:         2       8       0       0       0
  1499 ;;Total ram usage:       10 bytes
  1500 ;; Hardware stack levels used: 1
  1501 ;; Hardware stack levels required when called: 1
  1502 ;; This function calls:
  1503 ;;		Nothing
  1504 ;; This function is called by:
  1505 ;;		_vfpfcnvrt
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509     0318                     ___llmod:	
  1510                           ;psect for function ___llmod
  1511                           
  1512     0318                     l1198:	
  1513                           ;incstack = 0
  1514                           ; Regs used in ___llmod: [wreg+status,2+status,0+btemp+1]
  1515                           
  1516     0318  1283               	bcf	3,5	;RP0=0, select bank0
  1517     0319  1303               	bcf	3,6	;RP1=0, select bank0
  1518     031A  0823               	movf	___llmod@divisor+3,w
  1519     031B  0422               	iorwf	___llmod@divisor+2,w
  1520     031C  0421               	iorwf	___llmod@divisor+1,w
  1521     031D  0420               	iorwf	___llmod@divisor,w
  1522     031E  1903               	skipnz
  1523     031F  2B21               	goto	u681
  1524     0320  2B22               	goto	u680
  1525     0321                     u681:
  1526     0321  2B65               	goto	l1216
  1527     0322                     u680:
  1528     0322                     l1200:
  1529     0322  01F4               	clrf	___llmod@counter
  1530     0323  0AF4               	incf	___llmod@counter,f
  1531     0324  2B32               	goto	l1206
  1532     0325                     l1202:
  1533     0325  3001               	movlw	1
  1534     0326  00F3               	movwf	??___llmod
  1535     0327                     u695:
  1536     0327  1003               	clrc
  1537     0328  0DA0               	rlf	___llmod@divisor,f
  1538     0329  0DA1               	rlf	___llmod@divisor+1,f
  1539     032A  0DA2               	rlf	___llmod@divisor+2,f
  1540     032B  0DA3               	rlf	___llmod@divisor+3,f
  1541     032C  0BF3               	decfsz	??___llmod,f
  1542     032D  2B27               	goto	u695
  1543     032E                     l1204:
  1544     032E  3001               	movlw	1
  1545     032F  00FF               	movwf	btemp+1
  1546     0330  087F               	movf	btemp+1,w
  1547     0331  07F4               	addwf	___llmod@counter,f
  1548     0332                     l1206:
  1549     0332  1FA3               	btfss	___llmod@divisor+3,7
  1550     0333  2B35               	goto	u701
  1551     0334  2B36               	goto	u700
  1552     0335                     u701:
  1553     0335  2B25               	goto	l1202
  1554     0336                     u700:
  1555     0336                     l1208:
  1556     0336  0823               	movf	___llmod@divisor+3,w
  1557     0337  0227               	subwf	___llmod@dividend+3,w
  1558     0338  1D03               	skipz
  1559     0339  2B44               	goto	u715
  1560     033A  0822               	movf	___llmod@divisor+2,w
  1561     033B  0226               	subwf	___llmod@dividend+2,w
  1562     033C  1D03               	skipz
  1563     033D  2B44               	goto	u715
  1564     033E  0821               	movf	___llmod@divisor+1,w
  1565     033F  0225               	subwf	___llmod@dividend+1,w
  1566     0340  1D03               	skipz
  1567     0341  2B44               	goto	u715
  1568     0342  0820               	movf	___llmod@divisor,w
  1569     0343  0224               	subwf	___llmod@dividend,w
  1570     0344                     u715:
  1571     0344  1C03               	skipc
  1572     0345  2B47               	goto	u711
  1573     0346  2B48               	goto	u710
  1574     0347                     u711:
  1575     0347  2B56               	goto	l1212
  1576     0348                     u710:
  1577     0348                     l1210:
  1578     0348  0820               	movf	___llmod@divisor,w
  1579     0349  02A4               	subwf	___llmod@dividend,f
  1580     034A  0821               	movf	___llmod@divisor+1,w
  1581     034B  1C03               	skipc
  1582     034C  0F21               	incfsz	___llmod@divisor+1,w
  1583     034D  02A5               	subwf	___llmod@dividend+1,f
  1584     034E  0822               	movf	___llmod@divisor+2,w
  1585     034F  1C03               	skipc
  1586     0350  0F22               	incfsz	___llmod@divisor+2,w
  1587     0351  02A6               	subwf	___llmod@dividend+2,f
  1588     0352  0823               	movf	___llmod@divisor+3,w
  1589     0353  1C03               	skipc
  1590     0354  0F23               	incfsz	___llmod@divisor+3,w
  1591     0355  02A7               	subwf	___llmod@dividend+3,f
  1592     0356                     l1212:
  1593     0356  3001               	movlw	1
  1594     0357                     u725:
  1595     0357  1003               	clrc
  1596     0358  0CA3               	rrf	___llmod@divisor+3,f
  1597     0359  0CA2               	rrf	___llmod@divisor+2,f
  1598     035A  0CA1               	rrf	___llmod@divisor+1,f
  1599     035B  0CA0               	rrf	___llmod@divisor,f
  1600     035C  3EFF               	addlw	-1
  1601     035D  1D03               	skipz
  1602     035E  2B57               	goto	u725
  1603     035F                     l1214:
  1604     035F  3001               	movlw	1
  1605     0360  02F4               	subwf	___llmod@counter,f
  1606     0361  1D03               	btfss	3,2
  1607     0362  2B64               	goto	u731
  1608     0363  2B65               	goto	u730
  1609     0364                     u731:
  1610     0364  2B36               	goto	l1208
  1611     0365                     u730:
  1612     0365                     l1216:
  1613     0365  0827               	movf	___llmod@dividend+3,w
  1614     0366  00A3               	movwf	?___llmod+3
  1615     0367  0826               	movf	___llmod@dividend+2,w
  1616     0368  00A2               	movwf	?___llmod+2
  1617     0369  0825               	movf	___llmod@dividend+1,w
  1618     036A  00A1               	movwf	?___llmod+1
  1619     036B  0824               	movf	___llmod@dividend,w
  1620     036C  00A0               	movwf	?___llmod
  1621     036D                     l393:
  1622     036D  0008               	return
  1623     036E                     __end_of___llmod:
  1624                           
  1625                           	psect	text7
  1626     0256                     __ptext7:	
  1627 ;; *************** function ___lldiv *****************
  1628 ;; Defined at:
  1629 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__lldiv.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;  divisor         4    0[BANK0 ] unsigned long 
  1632 ;;  dividend        4    4[BANK0 ] unsigned long 
  1633 ;; Auto vars:     Size  Location     Type
  1634 ;;  quotient        4    8[BANK0 ] unsigned long 
  1635 ;;  counter         1   12[BANK0 ] unsigned char 
  1636 ;; Return value:  Size  Location     Type
  1637 ;;                  4    0[BANK0 ] unsigned long 
  1638 ;; Registers used:
  1639 ;;		wreg, status,2, status,0, btemp+1
  1640 ;; Tracked objects:
  1641 ;;		On entry : 0/0
  1642 ;;		On exit  : 0/0
  1643 ;;		Unchanged: 0/0
  1644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1645 ;;      Params:         0       8       0       0       0
  1646 ;;      Locals:         0       5       0       0       0
  1647 ;;      Temps:          1       0       0       0       0
  1648 ;;      Totals:         1      13       0       0       0
  1649 ;;Total ram usage:       14 bytes
  1650 ;; Hardware stack levels used: 1
  1651 ;; Hardware stack levels required when called: 1
  1652 ;; This function calls:
  1653 ;;		Nothing
  1654 ;; This function is called by:
  1655 ;;		_vfpfcnvrt
  1656 ;; This function uses a non-reentrant model
  1657 ;;
  1658                           
  1659     0256                     ___lldiv:	
  1660                           ;psect for function ___lldiv
  1661                           
  1662     0256                     l1172:	
  1663                           ;incstack = 0
  1664                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  1665                           
  1666     0256  3000               	movlw	0
  1667     0257  1283               	bcf	3,5	;RP0=0, select bank0
  1668     0258  1303               	bcf	3,6	;RP1=0, select bank0
  1669     0259  00AB               	movwf	___lldiv@quotient+3
  1670     025A  3000               	movlw	0
  1671     025B  00AA               	movwf	___lldiv@quotient+2
  1672     025C  3000               	movlw	0
  1673     025D  00A9               	movwf	___lldiv@quotient+1
  1674     025E  3000               	movlw	0
  1675     025F  00A8               	movwf	___lldiv@quotient
  1676     0260  0823               	movf	___lldiv@divisor+3,w
  1677     0261  0422               	iorwf	___lldiv@divisor+2,w
  1678     0262  0421               	iorwf	___lldiv@divisor+1,w
  1679     0263  0420               	iorwf	___lldiv@divisor,w
  1680     0264  1903               	skipnz
  1681     0265  2A67               	goto	u611
  1682     0266  2A68               	goto	u610
  1683     0267                     u611:
  1684     0267  2AB5               	goto	l1194
  1685     0268                     u610:
  1686     0268                     l1174:
  1687     0268  01AC               	clrf	___lldiv@counter
  1688     0269  0AAC               	incf	___lldiv@counter,f
  1689     026A  2A78               	goto	l1180
  1690     026B                     l1176:
  1691     026B  3001               	movlw	1
  1692     026C  00F3               	movwf	??___lldiv
  1693     026D                     u625:
  1694     026D  1003               	clrc
  1695     026E  0DA0               	rlf	___lldiv@divisor,f
  1696     026F  0DA1               	rlf	___lldiv@divisor+1,f
  1697     0270  0DA2               	rlf	___lldiv@divisor+2,f
  1698     0271  0DA3               	rlf	___lldiv@divisor+3,f
  1699     0272  0BF3               	decfsz	??___lldiv,f
  1700     0273  2A6D               	goto	u625
  1701     0274                     l1178:
  1702     0274  3001               	movlw	1
  1703     0275  00FF               	movwf	btemp+1
  1704     0276  087F               	movf	btemp+1,w
  1705     0277  07AC               	addwf	___lldiv@counter,f
  1706     0278                     l1180:
  1707     0278  1FA3               	btfss	___lldiv@divisor+3,7
  1708     0279  2A7B               	goto	u631
  1709     027A  2A7C               	goto	u630
  1710     027B                     u631:
  1711     027B  2A6B               	goto	l1176
  1712     027C                     u630:
  1713     027C                     l1182:
  1714     027C  3001               	movlw	1
  1715     027D  00F3               	movwf	??___lldiv
  1716     027E                     u645:
  1717     027E  1003               	clrc
  1718     027F  0DA8               	rlf	___lldiv@quotient,f
  1719     0280  0DA9               	rlf	___lldiv@quotient+1,f
  1720     0281  0DAA               	rlf	___lldiv@quotient+2,f
  1721     0282  0DAB               	rlf	___lldiv@quotient+3,f
  1722     0283  0BF3               	decfsz	??___lldiv,f
  1723     0284  2A7E               	goto	u645
  1724     0285                     l1184:
  1725     0285  0823               	movf	___lldiv@divisor+3,w
  1726     0286  0227               	subwf	___lldiv@dividend+3,w
  1727     0287  1D03               	skipz
  1728     0288  2A93               	goto	u655
  1729     0289  0822               	movf	___lldiv@divisor+2,w
  1730     028A  0226               	subwf	___lldiv@dividend+2,w
  1731     028B  1D03               	skipz
  1732     028C  2A93               	goto	u655
  1733     028D  0821               	movf	___lldiv@divisor+1,w
  1734     028E  0225               	subwf	___lldiv@dividend+1,w
  1735     028F  1D03               	skipz
  1736     0290  2A93               	goto	u655
  1737     0291  0820               	movf	___lldiv@divisor,w
  1738     0292  0224               	subwf	___lldiv@dividend,w
  1739     0293                     u655:
  1740     0293  1C03               	skipc
  1741     0294  2A96               	goto	u651
  1742     0295  2A97               	goto	u650
  1743     0296                     u651:
  1744     0296  2AA6               	goto	l1190
  1745     0297                     u650:
  1746     0297                     l1186:
  1747     0297  0820               	movf	___lldiv@divisor,w
  1748     0298  02A4               	subwf	___lldiv@dividend,f
  1749     0299  0821               	movf	___lldiv@divisor+1,w
  1750     029A  1C03               	skipc
  1751     029B  0F21               	incfsz	___lldiv@divisor+1,w
  1752     029C  02A5               	subwf	___lldiv@dividend+1,f
  1753     029D  0822               	movf	___lldiv@divisor+2,w
  1754     029E  1C03               	skipc
  1755     029F  0F22               	incfsz	___lldiv@divisor+2,w
  1756     02A0  02A6               	subwf	___lldiv@dividend+2,f
  1757     02A1  0823               	movf	___lldiv@divisor+3,w
  1758     02A2  1C03               	skipc
  1759     02A3  0F23               	incfsz	___lldiv@divisor+3,w
  1760     02A4  02A7               	subwf	___lldiv@dividend+3,f
  1761     02A5                     l1188:
  1762     02A5  1428               	bsf	___lldiv@quotient,0
  1763     02A6                     l1190:
  1764     02A6  3001               	movlw	1
  1765     02A7                     u665:
  1766     02A7  1003               	clrc
  1767     02A8  0CA3               	rrf	___lldiv@divisor+3,f
  1768     02A9  0CA2               	rrf	___lldiv@divisor+2,f
  1769     02AA  0CA1               	rrf	___lldiv@divisor+1,f
  1770     02AB  0CA0               	rrf	___lldiv@divisor,f
  1771     02AC  3EFF               	addlw	-1
  1772     02AD  1D03               	skipz
  1773     02AE  2AA7               	goto	u665
  1774     02AF                     l1192:
  1775     02AF  3001               	movlw	1
  1776     02B0  02AC               	subwf	___lldiv@counter,f
  1777     02B1  1D03               	btfss	3,2
  1778     02B2  2AB4               	goto	u671
  1779     02B3  2AB5               	goto	u670
  1780     02B4                     u671:
  1781     02B4  2A7C               	goto	l1182
  1782     02B5                     u670:
  1783     02B5                     l1194:
  1784     02B5  082B               	movf	___lldiv@quotient+3,w
  1785     02B6  00A3               	movwf	?___lldiv+3
  1786     02B7  082A               	movf	___lldiv@quotient+2,w
  1787     02B8  00A2               	movwf	?___lldiv+2
  1788     02B9  0829               	movf	___lldiv@quotient+1,w
  1789     02BA  00A1               	movwf	?___lldiv+1
  1790     02BB  0828               	movf	___lldiv@quotient,w
  1791     02BC  00A0               	movwf	?___lldiv
  1792     02BD                     l199:
  1793     02BD  0008               	return
  1794     02BE                     __end_of___lldiv:
  1795                           
  1796                           	psect	text8
  1797     03C7                     __ptext8:	
  1798 ;; *************** function _UART_SendString *****************
  1799 ;; Defined at:
  1800 ;;		line 55 in file "newmain.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;  str             1    wreg     PTR const unsigned char 
  1803 ;;		 -> main@buffer(32), 
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;  str             1    4[COMMON] PTR const unsigned char 
  1806 ;;		 -> main@buffer(32), 
  1807 ;; Return value:  Size  Location     Type
  1808 ;;                  1    wreg      void 
  1809 ;; Registers used:
  1810 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1811 ;; Tracked objects:
  1812 ;;		On entry : 0/0
  1813 ;;		On exit  : 0/0
  1814 ;;		Unchanged: 0/0
  1815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1816 ;;      Params:         0       0       0       0       0
  1817 ;;      Locals:         1       0       0       0       0
  1818 ;;      Temps:          0       0       0       0       0
  1819 ;;      Totals:         1       0       0       0       0
  1820 ;;Total ram usage:        1 bytes
  1821 ;; Hardware stack levels used: 1
  1822 ;; Hardware stack levels required when called: 2
  1823 ;; This function calls:
  1824 ;;		_UART_Transmit
  1825 ;; This function is called by:
  1826 ;;		_main
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830     03C7                     _UART_SendString:	
  1831                           ;psect for function _UART_SendString
  1832                           
  1833                           
  1834                           ;incstack = 0
  1835                           ; Regs used in _UART_SendString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1836                           ;UART_SendString@str stored from wreg
  1837     03C7  00F4               	movwf	UART_SendString@str
  1838     03C8                     l1320:
  1839                           
  1840                           ;newmain.c: 56:         }
  1841     03C8  2BD5               	goto	l1326
  1842     03C9                     l1322:
  1843                           
  1844                           ;newmain.c: 57:         if (interrupt_count3 >= 300) {
  1845     03C9  0874               	movf	UART_SendString@str,w
  1846     03CA  0084               	movwf	4
  1847     03CB  0800               	movf	0,w
  1848     03CC  120A  118A  23ED  120A  118A  	fcall	_UART_Transmit
  1849     03D1                     l1324:
  1850     03D1  3001               	movlw	1
  1851     03D2  00FF               	movwf	btemp+1
  1852     03D3  087F               	movf	btemp+1,w
  1853     03D4  07F4               	addwf	UART_SendString@str,f
  1854     03D5                     l1326:
  1855                           
  1856                           ;newmain.c: 56:         }
  1857     03D5  0874               	movf	UART_SendString@str,w
  1858     03D6  0084               	movwf	4
  1859     03D7  1383               	bcf	3,7	;select IRP bank0
  1860     03D8  0800               	movf	0,w
  1861     03D9  1D03               	btfss	3,2
  1862     03DA  2BDC               	goto	u851
  1863     03DB  2BDD               	goto	u850
  1864     03DC                     u851:
  1865     03DC  2BC9               	goto	l1322
  1866     03DD                     u850:
  1867     03DD                     l59:
  1868     03DD  0008               	return
  1869     03DE                     __end_of_UART_SendString:
  1870                           
  1871                           	psect	text9
  1872     03ED                     __ptext9:	
  1873 ;; *************** function _UART_Transmit *****************
  1874 ;; Defined at:
  1875 ;;		line 49 in file "newmain.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;  data            1    wreg     unsigned char 
  1878 ;; Auto vars:     Size  Location     Type
  1879 ;;  data            1    3[COMMON] unsigned char 
  1880 ;; Return value:  Size  Location     Type
  1881 ;;                  1    wreg      void 
  1882 ;; Registers used:
  1883 ;;		wreg
  1884 ;; Tracked objects:
  1885 ;;		On entry : 0/0
  1886 ;;		On exit  : 0/0
  1887 ;;		Unchanged: 0/0
  1888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1889 ;;      Params:         0       0       0       0       0
  1890 ;;      Locals:         1       0       0       0       0
  1891 ;;      Temps:          0       0       0       0       0
  1892 ;;      Totals:         1       0       0       0       0
  1893 ;;Total ram usage:        1 bytes
  1894 ;; Hardware stack levels used: 1
  1895 ;; Hardware stack levels required when called: 1
  1896 ;; This function calls:
  1897 ;;		Nothing
  1898 ;; This function is called by:
  1899 ;;		_UART_SendString
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903     03ED                     _UART_Transmit:	
  1904                           ;psect for function _UART_Transmit
  1905                           
  1906                           
  1907                           ;incstack = 0
  1908                           ; Regs used in _UART_Transmit: [wreg]
  1909                           ;UART_Transmit@data stored from wreg
  1910     03ED  00F3               	movwf	UART_Transmit@data
  1911     03EE                     l1298:
  1912     03EE                     l50:	
  1913                           ;newmain.c: 50:             PORTBbits.RB0 ^= 1;
  1914                           
  1915     03EE  1283               	bcf	3,5	;RP0=0, select bank0
  1916     03EF  1303               	bcf	3,6	;RP1=0, select bank0
  1917     03F0  1E0C               	btfss	12,4	;volatile
  1918     03F1  2BF3               	goto	u831
  1919     03F2  2BF4               	goto	u830
  1920     03F3                     u831:
  1921     03F3  2BEE               	goto	l50
  1922     03F4                     u830:
  1923     03F4                     l1300:
  1924                           
  1925                           ;newmain.c: 51:             interrupt_count1 = 0;
  1926     03F4  0873               	movf	UART_Transmit@data,w
  1927     03F5  0099               	movwf	25	;volatile
  1928     03F6                     l53:
  1929     03F6  0008               	return
  1930     03F7                     __end_of_UART_Transmit:
  1931                           
  1932                           	psect	text10
  1933     03DE                     __ptext10:	
  1934 ;; *************** function _UART_Init *****************
  1935 ;; Defined at:
  1936 ;;		line 35 in file "newmain.c"
  1937 ;; Parameters:    Size  Location     Type
  1938 ;;		None
  1939 ;; Auto vars:     Size  Location     Type
  1940 ;;		None
  1941 ;; Return value:  Size  Location     Type
  1942 ;;                  1    wreg      void 
  1943 ;; Registers used:
  1944 ;;		wreg
  1945 ;; Tracked objects:
  1946 ;;		On entry : 0/0
  1947 ;;		On exit  : 0/0
  1948 ;;		Unchanged: 0/0
  1949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1950 ;;      Params:         0       0       0       0       0
  1951 ;;      Locals:         0       0       0       0       0
  1952 ;;      Temps:          0       0       0       0       0
  1953 ;;      Totals:         0       0       0       0       0
  1954 ;;Total ram usage:        0 bytes
  1955 ;; Hardware stack levels used: 1
  1956 ;; Hardware stack levels required when called: 1
  1957 ;; This function calls:
  1958 ;;		Nothing
  1959 ;; This function is called by:
  1960 ;;		_main
  1961 ;; This function uses a non-reentrant model
  1962 ;;
  1963                           
  1964     03DE                     _UART_Init:	
  1965                           ;psect for function _UART_Init
  1966                           
  1967     03DE                     l1312:	
  1968                           ;incstack = 0
  1969                           ; Regs used in _UART_Init: [wreg]
  1970                           
  1971                           
  1972                           ;newmain.c: 36: 
  1973     03DE  1683               	bsf	3,5	;RP0=1, select bank1
  1974     03DF  1303               	bcf	3,6	;RP1=0, select bank1
  1975     03E0  1307               	bcf	7,6	;volatile
  1976                           
  1977                           ;newmain.c: 37: void __attribute__((picinterrupt(("")))) ISR() {
  1978     03E1  1787               	bsf	7,7	;volatile
  1979                           
  1980                           ;newmain.c: 39:         TMR2IF = 0;
  1981     03E2  1218               	bcf	24,4	;volatile
  1982                           
  1983                           ;newmain.c: 40: 
  1984     03E3  1518               	bsf	24,2	;volatile
  1985     03E4                     l1314:
  1986                           
  1987                           ;newmain.c: 42:         interrupt_count1++;
  1988     03E4  3033               	movlw	51
  1989     03E5  0099               	movwf	25	;volatile
  1990     03E6                     l1316:
  1991                           
  1992                           ;newmain.c: 44:         interrupt_count3++;
  1993     03E6  1283               	bcf	3,5	;RP0=0, select bank0
  1994     03E7  1303               	bcf	3,6	;RP1=0, select bank0
  1995     03E8  1798               	bsf	24,7	;volatile
  1996     03E9                     l1318:
  1997                           
  1998                           ;newmain.c: 45:         interrupt_count4++;
  1999     03E9  1683               	bsf	3,5	;RP0=1, select bank1
  2000     03EA  1303               	bcf	3,6	;RP1=0, select bank1
  2001     03EB  1698               	bsf	24,5	;volatile
  2002     03EC                     l47:
  2003     03EC  0008               	return
  2004     03ED                     __end_of_UART_Init:
  2005                           
  2006                           	psect	text11
  2007     014C                     __ptext11:	
  2008 ;; *************** function _ISR *****************
  2009 ;; Defined at:
  2010 ;;		line 61 in file "newmain.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;		None
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;		None
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  1    wreg      void 
  2017 ;; Registers used:
  2018 ;;		wreg, status,2, status,0, btemp+1
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2024 ;;      Params:         0       0       0       0       0
  2025 ;;      Locals:         0       0       0       0       0
  2026 ;;      Temps:          3       0       0       0       0
  2027 ;;      Totals:         3       0       0       0       0
  2028 ;;Total ram usage:        3 bytes
  2029 ;; Hardware stack levels used: 1
  2030 ;; This function calls:
  2031 ;;		Nothing
  2032 ;; This function is called by:
  2033 ;;		Interrupt level 1
  2034 ;; This function uses a non-reentrant model
  2035 ;;
  2036                           
  2037     014C                     _ISR:	
  2038                           ;psect for function _ISR
  2039                           
  2040     014C                     i1l1106:
  2041                           
  2042                           ;newmain.c: 62:             PORTBbits.RB3 ^= 1;
  2043     014C  1283               	bcf	3,5	;RP0=0, select bank0
  2044     014D  1303               	bcf	3,6	;RP1=0, select bank0
  2045     014E  1C8C               	btfss	12,1	;volatile
  2046     014F  2951               	goto	u56_21
  2047     0150  2952               	goto	u56_20
  2048     0151                     u56_21:
  2049     0151  29D9               	goto	i1l69
  2050     0152                     u56_20:
  2051     0152                     i1l1108:
  2052                           
  2053                           ;newmain.c: 63:             interrupt_count4 = 0;
  2054     0152  108C               	bcf	12,1	;volatile
  2055     0153                     i1l1110:
  2056                           
  2057                           ;newmain.c: 66: }
  2058     0153  3001               	movlw	1
  2059     0154  00FF               	movwf	btemp+1
  2060     0155  087F               	movf	btemp+1,w
  2061     0156  07FA               	addwf	_interrupt_count1,f	;volatile
  2062     0157                     i1l1112:
  2063                           
  2064                           ;newmain.c: 67: 
  2065     0157  3001               	movlw	1
  2066     0158  07F8               	addwf	_interrupt_count2,f	;volatile
  2067     0159  1803               	skipnc
  2068     015A  0AF9               	incf	_interrupt_count2+1,f	;volatile
  2069     015B  3000               	movlw	0
  2070     015C  07F9               	addwf	_interrupt_count2+1,f	;volatile
  2071     015D                     i1l1114:
  2072                           
  2073                           ;newmain.c: 68: void main(void) {
  2074     015D  3001               	movlw	1
  2075     015E  1683               	bsf	3,5	;RP0=1, select bank1
  2076     015F  1303               	bcf	3,6	;RP1=0, select bank1
  2077     0160  07C8               	addwf	_interrupt_count3^(0+128),f	;volatile
  2078     0161  1803               	skipnc
  2079     0162  0AC9               	incf	(_interrupt_count3+1)^(0+128),f	;volatile
  2080     0163  3000               	movlw	0
  2081     0164  07C9               	addwf	(_interrupt_count3+1)^(0+128),f	;volatile
  2082     0165                     i1l1116:
  2083                           
  2084                           ;newmain.c: 69: 
  2085     0165  3001               	movlw	1
  2086     0166  07C6               	addwf	_interrupt_count4^(0+128),f	;volatile
  2087     0167  1803               	skipnc
  2088     0168  0AC7               	incf	(_interrupt_count4+1)^(0+128),f	;volatile
  2089     0169  3000               	movlw	0
  2090     016A  07C7               	addwf	(_interrupt_count4+1)^(0+128),f	;volatile
  2091     016B                     i1l1118:
  2092                           
  2093                           ;newmain.c: 70:     TRISBbits.TRISB0 = 0;
  2094     016B  3001               	movlw	1
  2095     016C  07C4               	addwf	_interrupt_count5^(0+128),f	;volatile
  2096     016D  1803               	skipnc
  2097     016E  0AC5               	incf	(_interrupt_count5+1)^(0+128),f	;volatile
  2098     016F  3000               	movlw	0
  2099     0170  07C5               	addwf	(_interrupt_count5+1)^(0+128),f	;volatile
  2100     0171                     i1l1120:
  2101                           
  2102                           ;newmain.c: 73:     TRISBbits.TRISB3 = 0;
  2103     0171  3064               	movlw	100
  2104     0172  027A               	subwf	_interrupt_count1,w	;volatile
  2105     0173  1C03               	skipc
  2106     0174  2976               	goto	u57_21
  2107     0175  2977               	goto	u57_20
  2108     0176                     u57_21:
  2109     0176  2984               	goto	i1l1126
  2110     0177                     u57_20:
  2111     0177                     i1l1122:
  2112                           
  2113                           ;newmain.c: 74: 
  2114     0177  1283               	bcf	3,5	;RP0=0, select bank0
  2115     0178  1303               	bcf	3,6	;RP1=0, select bank0
  2116     0179  0806               	movf	6,w	;volatile
  2117     017A  3901               	andlw	1
  2118     017B  00FF               	movwf	btemp+1
  2119     017C  3001               	movlw	1
  2120     017D  06FF               	xorwf	btemp+1,f
  2121     017E  0806               	movf	6,w	;volatile
  2122     017F  067F               	xorwf	btemp+1,w
  2123     0180  39FE               	andlw	-2
  2124     0181  067F               	xorwf	btemp+1,w
  2125     0182  0086               	movwf	6	;volatile
  2126     0183                     i1l1124:
  2127                           
  2128                           ;newmain.c: 75: 
  2129     0183  01FA               	clrf	_interrupt_count1	;volatile
  2130     0184                     i1l1126:
  2131                           
  2132                           ;newmain.c: 77:     PORTBbits.RB1 = 0;
  2133     0184  3000               	movlw	0
  2134     0185  0279               	subwf	_interrupt_count2+1,w	;volatile
  2135     0186  30C8               	movlw	200
  2136     0187  1903               	skipnz
  2137     0188  0278               	subwf	_interrupt_count2,w	;volatile
  2138     0189  1C03               	skipc
  2139     018A  298C               	goto	u58_21
  2140     018B  298D               	goto	u58_20
  2141     018C                     u58_21:
  2142     018C  299B               	goto	i1l1132
  2143     018D                     u58_20:
  2144     018D                     i1l1128:
  2145                           
  2146                           ;newmain.c: 78:     PORTBbits.RB2 = 0;
  2147     018D  1283               	bcf	3,5	;RP0=0, select bank0
  2148     018E  0C06               	rrf	6,w	;volatile
  2149     018F  3901               	andlw	1
  2150     0190  00FF               	movwf	btemp+1
  2151     0191  3001               	movlw	1
  2152     0192  06FF               	xorwf	btemp+1,f
  2153     0193  0DFF               	rlf	btemp+1,f
  2154     0194  0806               	movf	6,w	;volatile
  2155     0195  067F               	xorwf	btemp+1,w
  2156     0196  39FD               	andlw	-3
  2157     0197  067F               	xorwf	btemp+1,w
  2158     0198  0086               	movwf	6	;volatile
  2159     0199                     i1l1130:
  2160                           
  2161                           ;newmain.c: 79:     PORTBbits.RB3 = 0;
  2162     0199  01F8               	clrf	_interrupt_count2	;volatile
  2163     019A  01F9               	clrf	_interrupt_count2+1	;volatile
  2164     019B                     i1l1132:
  2165                           
  2166                           ;newmain.c: 81: 
  2167     019B  3001               	movlw	1
  2168     019C  1683               	bsf	3,5	;RP0=1, select bank1
  2169     019D  1303               	bcf	3,6	;RP1=0, select bank1
  2170     019E  0249               	subwf	(_interrupt_count3+1)^(0+128),w	;volatile
  2171     019F  302C               	movlw	44
  2172     01A0  1903               	skipnz
  2173     01A1  0248               	subwf	_interrupt_count3^(0+128),w	;volatile
  2174     01A2  1C03               	skipc
  2175     01A3  29A5               	goto	u59_21
  2176     01A4  29A6               	goto	u59_20
  2177     01A5                     u59_21:
  2178     01A5  29BA               	goto	i1l1138
  2179     01A6                     u59_20:
  2180     01A6                     i1l1134:
  2181                           
  2182                           ;newmain.c: 82:     T2CONbits.T2CKPS = 0b11;
  2183     01A6  1283               	bcf	3,5	;RP0=0, select bank0
  2184     01A7  1303               	bcf	3,6	;RP1=0, select bank0
  2185     01A8  0C06               	rrf	6,w	;volatile
  2186     01A9  00FF               	movwf	btemp+1
  2187     01AA  0C7F               	rrf	btemp+1,w
  2188     01AB  3901               	andlw	1
  2189     01AC  00FF               	movwf	btemp+1
  2190     01AD  3001               	movlw	1
  2191     01AE  06FF               	xorwf	btemp+1,f
  2192     01AF  0DFF               	rlf	btemp+1,f
  2193     01B0  0DFF               	rlf	btemp+1,f
  2194     01B1  0806               	movf	6,w	;volatile
  2195     01B2  067F               	xorwf	btemp+1,w
  2196     01B3  39FB               	andlw	-5
  2197     01B4  067F               	xorwf	btemp+1,w
  2198     01B5  0086               	movwf	6	;volatile
  2199     01B6                     i1l1136:
  2200                           
  2201                           ;newmain.c: 83:     PR2 = 124;
  2202     01B6  1683               	bsf	3,5	;RP0=1, select bank1
  2203     01B7  1303               	bcf	3,6	;RP1=0, select bank1
  2204     01B8  01C8               	clrf	_interrupt_count3^(0+128)	;volatile
  2205     01B9  01C9               	clrf	(_interrupt_count3+1)^(0+128)	;volatile
  2206     01BA                     i1l1138:
  2207                           
  2208                           ;newmain.c: 85:     T2CONbits.TMR2ON = 1;
  2209     01BA  3001               	movlw	1
  2210     01BB  0247               	subwf	(_interrupt_count4+1)^(0+128),w	;volatile
  2211     01BC  3090               	movlw	144
  2212     01BD  1903               	skipnz
  2213     01BE  0246               	subwf	_interrupt_count4^(0+128),w	;volatile
  2214     01BF  1C03               	skipc
  2215     01C0  29C2               	goto	u60_21
  2216     01C1  29C3               	goto	u60_20
  2217     01C2                     u60_21:
  2218     01C2  29D9               	goto	i1l69
  2219     01C3                     u60_20:
  2220     01C3                     i1l1140:
  2221                           
  2222                           ;newmain.c: 86: 
  2223     01C3  1283               	bcf	3,5	;RP0=0, select bank0
  2224     01C4  1303               	bcf	3,6	;RP1=0, select bank0
  2225     01C5  0C06               	rrf	6,w	;volatile
  2226     01C6  00FF               	movwf	btemp+1
  2227     01C7  0CFF               	rrf	btemp+1,f
  2228     01C8  0C7F               	rrf	btemp+1,w
  2229     01C9  3901               	andlw	1
  2230     01CA  00FF               	movwf	btemp+1
  2231     01CB  3001               	movlw	1
  2232     01CC  06FF               	xorwf	btemp+1,f
  2233     01CD  0DFF               	rlf	btemp+1,f
  2234     01CE  0DFF               	rlf	btemp+1,f
  2235     01CF  0DFF               	rlf	btemp+1,f
  2236     01D0  0806               	movf	6,w	;volatile
  2237     01D1  067F               	xorwf	btemp+1,w
  2238     01D2  39F7               	andlw	-9
  2239     01D3  067F               	xorwf	btemp+1,w
  2240     01D4  0086               	movwf	6	;volatile
  2241     01D5                     i1l1142:
  2242                           
  2243                           ;newmain.c: 87: 
  2244     01D5  1683               	bsf	3,5	;RP0=1, select bank1
  2245     01D6  1303               	bcf	3,6	;RP1=0, select bank1
  2246     01D7  01C6               	clrf	_interrupt_count4^(0+128)	;volatile
  2247     01D8  01C7               	clrf	(_interrupt_count4+1)^(0+128)	;volatile
  2248     01D9                     i1l69:
  2249     01D9  0872               	movf	??_ISR+2,w
  2250     01DA  00FF               	movwf	btemp+1
  2251     01DB  0871               	movf	??_ISR+1,w
  2252     01DC  008A               	movwf	10
  2253     01DD  0E70               	swapf	??_ISR,w
  2254     01DE  0083               	movwf	3
  2255     01DF  0EFE               	swapf	btemp,f
  2256     01E0  0E7E               	swapf	btemp,w
  2257     01E1  0009               	retfie
  2258     01E2                     __end_of_ISR:
  2259     007E                     btemp	set	126	;btemp
  2260     007E                     wtemp0	set	126
  2261                           
  2262                           	psect	intentry
  2263     0004                     __pintentry:	
  2264                           ;incstack = 0
  2265                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1]
  2266                           
  2267     0004                     interrupt_function:
  2268     007E                     saved_w	set	btemp
  2269     0004  00FE               	movwf	btemp
  2270     0005  0E03               	swapf	3,w
  2271     0006  00F0               	movwf	??_ISR
  2272     0007  080A               	movf	10,w
  2273     0008  00F1               	movwf	??_ISR+1
  2274     0009  087F               	movf	btemp+1,w
  2275     000A  00F2               	movwf	??_ISR+2
  2276     000B  120A  118A  294C   	ljmp	_ISR
  2277                           
  2278                           	psect	config
  2279                           
  2280                           ;Config register CONFIG @ 0x2007
  2281                           ;	Oscillator Selection bits
  2282                           ;	FOSC = HS, HS oscillator
  2283                           ;	Watchdog Timer Enable bit
  2284                           ;	WDTE = OFF, WDT disabled
  2285                           ;	Power-up Timer Enable bit
  2286                           ;	PWRTE = ON, PWRT enabled
  2287                           ;	Brown-out Reset Enable bit
  2288                           ;	BOREN = ON, BOR enabled
  2289                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2290                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2291                           ;	Data EEPROM Memory Code Protection bit
  2292                           ;	CPD = OFF, Data EEPROM code protection off
  2293                           ;	Flash Program Memory Write Enable bits
  2294                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2295                           ;	In-Circuit Debugger Mode bit
  2296                           ;	DEBUG = OFF, In-Circuit Debugger disabled, RB6 and RB7 are general purpose I/O pins
  2297                           ;	Flash Program Memory Code Protection bit
  2298                           ;	CP = 0x1, unprogrammed default
  2299     2007                     	org	8199
  2300     2007  3F72               	dw	16242

Data Sizes:
    Strings     19
    Constant    0
    Data        0
    BSS         46
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     48      49
    BANK1            80     36      78
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(1) Largest target is 0

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    S742$buffer	PTR unsigned char  size(1) Largest target is 0

    S742$source	PTR const unsigned char  size(1) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_1(CODE[19]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 32
		 -> main@buffer(BANK1[32]), 

    UART_SendString@str	PTR const unsigned char  size(1) Largest target is 32
		 -> main@buffer(BANK1[32]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 19
		 -> STR_1(CODE[19]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 19
		 -> STR_1(CODE[19]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_1(CODE[19]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _UART_SendString->_UART_Transmit

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                39    39      0    3874
                                             45 BANK0      3     3      0
                                              0 BANK1     36    36      0
                          _UART_Init
                    _UART_SendString
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    16      5    3625
                                             26 BANK0     19    14      5
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     2      2    3187
                                             22 BANK0      4     2      2
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           12    10      2    2780
                                              6 COMMON     2     2      0
                                             13 BANK0      9     7      2
                            ___lldiv
                            ___llmod
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     957
                                              3 COMMON     3     0      3
                                              0 BANK0      5     5      0
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) ___llmod                                             10     2      8     412
                                              3 COMMON     2     2      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     421
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _UART_SendString                                      1     1      0     132
                                              4 COMMON     1     1      0
                      _UART_Transmit
 ---------------------------------------------------------------------------------
 (2) _UART_Transmit                                        1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
   _UART_SendString
     _UART_Transmit
   _sprintf
     _vfprintf
       _vfpfcnvrt
         ___lldiv
         ___llmod
         _fputc
           _putch

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      8A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     30      31       5       61.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     24      4E       7       97.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      8A      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri May 24 10:16:56 2024

                      pc 0002                       l50 03EE                       l53 03F6  
                     l47 03EC                       l59 03DD                       fsr 0004  
                    l702 03FF                      l199 02BD                      l393 036D  
                    l626 03AD                      l672 014B                      l691 0317  
                    l679 038E                      _PR2 0092                      u610 0268  
                    u611 0267                      u700 0336                      _ISR 014C  
                    u701 0335                      u630 027C                      u710 0348  
                    u631 027B                      u711 0347                      u800 00FA  
                    u625 026D                      u801 00F9                      u650 0297  
                    u730 0365                      u810 00FF                      u651 0296  
                    u731 0364                      u715 0344                      u811 00FE  
                    u740 02C3                      u820 011E                      u645 027E  
                    u725 0357                      u741 02C2                      u821 011D  
                    u830 03F4                      u670 02B5                      u750 02C8  
                    u831 03F3                      u671 02B4                      u655 0293  
                    u751 02C7                      u680 0322                      u760 02E0  
                    u840 038C                      u665 02A7                      u681 0321  
                    u761 02DF                      u841 038B                      u850 03DD  
                    u770 02FE                      u851 03DC                      u771 02FD  
                    u780 0036                      u781 0035                      u790 007A  
                    u695 0327                      u775 02FA                      u791 0079  
                    u867 024C                      fsr0 0004                      indf 0000  
                   ?_ISR 0070                     l1200 0322                     l1210 0348  
                   l1202 0325                     l1300 03F4                     l1212 0356  
                   l1204 032E                     l1220 02BE                     l1214 035F  
                   l1206 0332                     l1230 02FE                     l1222 02C3  
                   l1302 0371                     l1312 03DE                     l1320 03C8  
                   l1208 0336                     l1216 0365                     l1224 02C8  
                   l1240 0047                     l1304 0374                     l1314 03E4  
                   l1322 03C9                     l1226 02CF                     l1250 0064  
                   l1242 004D                     l1234 0027                     l1306 037E  
                   l1330 0396                     l1316 03E6                     l1324 03D1  
                   l1180 0278                     l1172 0256                     l1228 02E0  
                   l1260 008F                     l1244 0053                     l1236 0036  
                   l1308 038C                     l1332 0398                     l1340 01E2  
                   l1318 03E9                     l1326 03D5                     l1190 02A6  
                   l1182 027C                     l1174 0268                     l1270 00B3  
                   l1246 005C                     l1254 0066                     l1238 003C  
                   l1334 039A                     l1350 01F8                     l1342 01EE  
                   l1192 02AF                     l1184 0285                     l1176 026B  
                   l1280 0112                     l1272 00D3                     l1264 00A3  
                   l1248 0061                     l1256 006E                     l1336 03A4  
                   l1328 0392                     l1360 020C                     l1352 01FB  
                   l1344 01F0                     l1186 0297                     l1178 0274  
                   l1194 02B5                     l1282 0118                     l1274 00F2  
                   l1266 00AB                     l1258 007B                     l1362 021C  
                   l1354 01FC                     l1346 01F4                     l1188 02A5  
                   l1276 00FA                     l1268 00B1                     l1292 0134  
                   l1364 023E                     l1356 01FD                     l1348 01F7  
                   l1198 0318                     l1278 0100                     l1286 011F  
                   l1366 0244                     l1358 0202                     l1288 012A  
                   l1298 03EE                     STR_1 03B4                     i1l69 01D9  
                   _TMR2 0011                     _TXIF 0064                     _dbuf 00A0  
                   _main 01E2                     _prec 00C2                     btemp 007E  
                   start 000E                    ??_ISR 0070                    ?_main 0070  
        __end_of___lldiv 02BE          __end_of___llmod 036E             vfpfcnvrt@fmt 002D  
                  _SPBRG 0099                    u60_20 01C3                    u60_21 01C2  
                  u56_20 0152                    u56_21 0151                    u57_20 0177  
                  u57_21 0176                    u58_20 018D                    u58_21 018C  
                  u59_20 01A6                    u59_21 01A5                    _TXREG 0019  
                  _flags 0050                    _fputc 02BE                    _width 00C0  
                  _putch 03FF         ?_UART_SendString 0070                    pclath 000A  
                  status 0003                    wtemp0 007E          __end_of_sprintf 03AE  
        __initialization 0011             __end_of_main 0256                   ??_main 004D  
                 ?_fputc 0073         ___llmod@dividend 0024                   ?_putch 0070  
                 i1l1110 0153                   i1l1120 0171                   i1l1112 0157  
                 i1l1130 0199                   i1l1122 0177                   i1l1114 015D  
                 i1l1106 014C                   i1l1140 01C3                   i1l1132 019B  
                 i1l1124 0183                   i1l1116 0165                   i1l1108 0152  
                 i1l1142 01D5                   i1l1134 01A6                   i1l1126 0184  
                 i1l1118 016B                   i1l1136 01B6                   i1l1128 018D  
                 i1l1138 01BA                   _TMR2IF 0061                   _TRISC6 043E  
                 _TRISC7 043F             vfprintf@cfmt 0039        __end_of_UART_Init 03ED  
              ??___lldiv 0073                ??___llmod 0073                   fputc@c 0073  
                 saved_w 007E                   putch@c 0070         __end_of_vfprintf 038F  
              ??_sprintf 003F  __end_of__initialization 0020    __end_of_UART_Transmit 03F7  
         __pcstackCOMMON 0070            __end_of_fputc 0318            __end_of_putch 0400  
                ??_fputc 0020                  ??_putch 0073               __pbssBANK0 0050  
             __pbssBANK1 00A0               __pmaintext 01E2               __pintentry 0004  
             __stringtab 03AE       UART_SendString@str 0074                  ___lldiv 0256  
                ___llmod 0318                ?_vfprintf 0036                  __ptext1 038F  
                __ptext2 036E                  __ptext3 0024                  __ptext4 02BE  
                __ptext5 03FF                  __ptext6 0318                  __ptext7 0256  
                __ptext8 03C7                  __ptext9 03ED                _T2CONbits 0012  
                _sprintf 038F                  clrloop0 03F8     end_of_initialization 0020  
                fputc@fp 0075          ___lldiv@divisor 0020          ___lldiv@counter 002C  
      __end_of_vfpfcnvrt 014C                _RCSTAbits 0018         vfpfcnvrt@convarg 0030  
             ??_vfprintf 0078                _UART_Init 03DE                _PORTBbits 0006  
              _TRISBbits 0086               main@buffer 00CA                _TXSTAbits 0098  
            vfpfcnvrt@ap 002E              vfpfcnvrt@cp 0034              vfpfcnvrt@fp 002F  
             ?_UART_Init 0070      start_initialization 0011              __end_of_ISR 01E2  
        ___llmod@divisor 0020          ___llmod@counter 0074              vfprintf@fmt 0036  
      ??_UART_SendString 0074              __pbssCOMMON 0078                ___latbits 0002  
          __pcstackBANK0 0020            __pcstackBANK1 00CA         main@loop_counter 00EA  
               ?___lldiv 0020                 ?___llmod 0020        UART_Transmit@data 0073  
            ??_UART_Init 0073                __pstrings 03AE                 ?_sprintf 003A  
      interrupt_function 0004                clear_ram0 03F7                 _PIE1bits 008C  
          _UART_Transmit 03ED                _vfpfcnvrt 0024              __stringbase 03B3  
             vfpfcnvrt@c 0035           ?_UART_Transmit 0070               vfprintf@ap 0037  
             vfprintf@fp 0038               ?_vfpfcnvrt 002D       __end_of__stringtab 03B4  
             sprintf@fmt 003A                 __ptext10 03DE                 __ptext11 014C  
       _interrupt_count1 007A         _interrupt_count2 0078         _interrupt_count3 00C8  
       _interrupt_count4 00C6         _interrupt_count5 00C4          _UART_SendString 03C7  
               _vfprintf 036E               _INTCONbits 000B                 intlevel1 0000  
              sprintf@ap 0041          ??_UART_Transmit 0073         ___lldiv@dividend 0024  
              stringcode 03AE              ??_vfpfcnvrt 0076                 sprintf@f 0042  
               sprintf@s 0040         ___lldiv@quotient 0028                 stringdir 03AE  
               stringtab 03AE  __end_of_UART_SendString 03DE  
